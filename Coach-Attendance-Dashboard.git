{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/daverarobertson/daverarobertson/blob/main/Coach-Attendance-Dashboard.git\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import userdata\n",
        "secret = userdata.get('onyx-outpost-401812-739fa11b3839.json')"
      ],
      "metadata": {
        "id": "WcK1fHnuS4KT"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 615
        },
        "id": "CncApzNWAfkP",
        "outputId": "fae2c4ac-86e9-433b-8531-293531a113d7"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                             Title                      Start  \\\n",
              "0               Coach SDF Training  2024-01-08T13:30:00+02:00   \n",
              "1               Coach SDF Training  2024-01-08T13:30:00+02:00   \n",
              "2               Coach SDF Training  2024-01-08T13:30:00+02:00   \n",
              "3               Coach SDF Training  2024-01-08T13:30:00+02:00   \n",
              "4               Coach SDF Training  2024-01-08T13:30:00+02:00   \n",
              "...                            ...                        ...   \n",
              "8952  Group A_02 Coaching Session   2024-03-11T11:00:00+02:00   \n",
              "8953  Group A_01 Coaching Session   2024-03-11T09:50:00+02:00   \n",
              "8954  Group A_01 Coaching Session   2024-03-13T10:00:00+02:00   \n",
              "8955  Group A_01 Coaching Session   2024-03-13T10:00:00+02:00   \n",
              "8956  Group A_02 Coaching Session   2024-03-13T11:00:00+02:00   \n",
              "\n",
              "                            End Start Time  End Time     Status  \\\n",
              "0     2024-01-08T16:00:00+02:00   13:30:00  16:00:00  confirmed   \n",
              "1     2024-01-08T16:00:00+02:00   13:30:00  16:00:00  confirmed   \n",
              "2     2024-01-08T16:00:00+02:00   13:30:00  16:00:00  confirmed   \n",
              "3     2024-01-08T16:00:00+02:00   13:30:00  16:00:00  confirmed   \n",
              "4     2024-01-08T16:00:00+02:00   13:30:00  16:00:00  confirmed   \n",
              "...                         ...        ...       ...        ...   \n",
              "8952  2024-03-11T12:00:00+02:00   11:00:00  12:00:00  confirmed   \n",
              "8953  2024-03-11T10:50:00+02:00   09:50:00  10:50:00  confirmed   \n",
              "8954  2024-03-13T10:45:00+02:00   10:00:00  10:45:00  confirmed   \n",
              "8955  2024-03-13T10:45:00+02:00   10:00:00  10:45:00  confirmed   \n",
              "8956  2024-03-13T11:45:00+02:00   11:00:00  11:45:00  confirmed   \n",
              "\n",
              "                           Date                     Actor  \\\n",
              "0     2024-01-08T15:50:54+02:00     kevin@codespace.co.za   \n",
              "1     2024-01-08T15:49:42+02:00     renzo@codespace.co.za   \n",
              "2     2024-01-08T15:49:38+02:00      riko@codespace.co.za   \n",
              "3     2024-01-08T15:48:50+02:00      owen@codespace.co.za   \n",
              "4     2024-01-08T15:48:48+02:00   saajida@codespace.co.za   \n",
              "...                         ...                       ...   \n",
              "8952  2024-03-11T11:42:13+02:00  benjamin@codespace.co.za   \n",
              "8953  2024-03-11T10:44:39+02:00  benjamin@codespace.co.za   \n",
              "8954  2024-03-13T09:32:08+02:00  benjamin@codespace.co.za   \n",
              "8955  2024-03-13T10:59:32+02:00  benjamin@codespace.co.za   \n",
              "8956  2024-03-13T11:53:17+02:00  benjamin@codespace.co.za   \n",
              "\n",
              "               Actor name                            Calendar event ID  \\\n",
              "0           Kevin Mbuisha                   3lrvq2pu6ft5chrfbvtqdegrvv   \n",
              "1           Renzo van Wyk                   3lrvq2pu6ft5chrfbvtqdegrvv   \n",
              "2           Riko Wolhuter                   3lrvq2pu6ft5chrfbvtqdegrvv   \n",
              "3         Owen Rambanduli                   3lrvq2pu6ft5chrfbvtqdegrvv   \n",
              "4          Saajida Mathen                   3lrvq2pu6ft5chrfbvtqdegrvv   \n",
              "...                   ...                                          ...   \n",
              "8952  Benjamin Loggenberg  0ojf2d6899bndslkp2q129l62q_20240311T090000Z   \n",
              "8953  Benjamin Loggenberg  2in6mai5r3208mgdii49rtu662_20240311T080000Z   \n",
              "8954  Benjamin Loggenberg  2in6mai5r3208mgdii49rtu662_20240313T080000Z   \n",
              "8955  Benjamin Loggenberg  2in6mai5r3208mgdii49rtu662_20240313T080000Z   \n",
              "8956  Benjamin Loggenberg  0ojf2d6899bndslkp2q129l62q_20240313T090000Z   \n",
              "\n",
              "     Duration (seconds)  \n",
              "0                  8347  \n",
              "1                  5517  \n",
              "2                  8406  \n",
              "3                  5815  \n",
              "4                  8277  \n",
              "...                 ...  \n",
              "8952               2353  \n",
              "8953               3019  \n",
              "8954               1831  \n",
              "8955               3487  \n",
              "8956               3030  \n",
              "\n",
              "[8957 rows x 11 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1b3c8ba2-ca27-4279-9925-a69d430a110d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Title</th>\n",
              "      <th>Start</th>\n",
              "      <th>End</th>\n",
              "      <th>Start Time</th>\n",
              "      <th>End Time</th>\n",
              "      <th>Status</th>\n",
              "      <th>Date</th>\n",
              "      <th>Actor</th>\n",
              "      <th>Actor name</th>\n",
              "      <th>Calendar event ID</th>\n",
              "      <th>Duration (seconds)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Coach SDF Training</td>\n",
              "      <td>2024-01-08T13:30:00+02:00</td>\n",
              "      <td>2024-01-08T16:00:00+02:00</td>\n",
              "      <td>13:30:00</td>\n",
              "      <td>16:00:00</td>\n",
              "      <td>confirmed</td>\n",
              "      <td>2024-01-08T15:50:54+02:00</td>\n",
              "      <td>kevin@codespace.co.za</td>\n",
              "      <td>Kevin Mbuisha</td>\n",
              "      <td>3lrvq2pu6ft5chrfbvtqdegrvv</td>\n",
              "      <td>8347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Coach SDF Training</td>\n",
              "      <td>2024-01-08T13:30:00+02:00</td>\n",
              "      <td>2024-01-08T16:00:00+02:00</td>\n",
              "      <td>13:30:00</td>\n",
              "      <td>16:00:00</td>\n",
              "      <td>confirmed</td>\n",
              "      <td>2024-01-08T15:49:42+02:00</td>\n",
              "      <td>renzo@codespace.co.za</td>\n",
              "      <td>Renzo van Wyk</td>\n",
              "      <td>3lrvq2pu6ft5chrfbvtqdegrvv</td>\n",
              "      <td>5517</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Coach SDF Training</td>\n",
              "      <td>2024-01-08T13:30:00+02:00</td>\n",
              "      <td>2024-01-08T16:00:00+02:00</td>\n",
              "      <td>13:30:00</td>\n",
              "      <td>16:00:00</td>\n",
              "      <td>confirmed</td>\n",
              "      <td>2024-01-08T15:49:38+02:00</td>\n",
              "      <td>riko@codespace.co.za</td>\n",
              "      <td>Riko Wolhuter</td>\n",
              "      <td>3lrvq2pu6ft5chrfbvtqdegrvv</td>\n",
              "      <td>8406</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Coach SDF Training</td>\n",
              "      <td>2024-01-08T13:30:00+02:00</td>\n",
              "      <td>2024-01-08T16:00:00+02:00</td>\n",
              "      <td>13:30:00</td>\n",
              "      <td>16:00:00</td>\n",
              "      <td>confirmed</td>\n",
              "      <td>2024-01-08T15:48:50+02:00</td>\n",
              "      <td>owen@codespace.co.za</td>\n",
              "      <td>Owen Rambanduli</td>\n",
              "      <td>3lrvq2pu6ft5chrfbvtqdegrvv</td>\n",
              "      <td>5815</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Coach SDF Training</td>\n",
              "      <td>2024-01-08T13:30:00+02:00</td>\n",
              "      <td>2024-01-08T16:00:00+02:00</td>\n",
              "      <td>13:30:00</td>\n",
              "      <td>16:00:00</td>\n",
              "      <td>confirmed</td>\n",
              "      <td>2024-01-08T15:48:48+02:00</td>\n",
              "      <td>saajida@codespace.co.za</td>\n",
              "      <td>Saajida Mathen</td>\n",
              "      <td>3lrvq2pu6ft5chrfbvtqdegrvv</td>\n",
              "      <td>8277</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8952</th>\n",
              "      <td>Group A_02 Coaching Session</td>\n",
              "      <td>2024-03-11T11:00:00+02:00</td>\n",
              "      <td>2024-03-11T12:00:00+02:00</td>\n",
              "      <td>11:00:00</td>\n",
              "      <td>12:00:00</td>\n",
              "      <td>confirmed</td>\n",
              "      <td>2024-03-11T11:42:13+02:00</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>Benjamin Loggenberg</td>\n",
              "      <td>0ojf2d6899bndslkp2q129l62q_20240311T090000Z</td>\n",
              "      <td>2353</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8953</th>\n",
              "      <td>Group A_01 Coaching Session</td>\n",
              "      <td>2024-03-11T09:50:00+02:00</td>\n",
              "      <td>2024-03-11T10:50:00+02:00</td>\n",
              "      <td>09:50:00</td>\n",
              "      <td>10:50:00</td>\n",
              "      <td>confirmed</td>\n",
              "      <td>2024-03-11T10:44:39+02:00</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>Benjamin Loggenberg</td>\n",
              "      <td>2in6mai5r3208mgdii49rtu662_20240311T080000Z</td>\n",
              "      <td>3019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8954</th>\n",
              "      <td>Group A_01 Coaching Session</td>\n",
              "      <td>2024-03-13T10:00:00+02:00</td>\n",
              "      <td>2024-03-13T10:45:00+02:00</td>\n",
              "      <td>10:00:00</td>\n",
              "      <td>10:45:00</td>\n",
              "      <td>confirmed</td>\n",
              "      <td>2024-03-13T09:32:08+02:00</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>Benjamin Loggenberg</td>\n",
              "      <td>2in6mai5r3208mgdii49rtu662_20240313T080000Z</td>\n",
              "      <td>1831</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8955</th>\n",
              "      <td>Group A_01 Coaching Session</td>\n",
              "      <td>2024-03-13T10:00:00+02:00</td>\n",
              "      <td>2024-03-13T10:45:00+02:00</td>\n",
              "      <td>10:00:00</td>\n",
              "      <td>10:45:00</td>\n",
              "      <td>confirmed</td>\n",
              "      <td>2024-03-13T10:59:32+02:00</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>Benjamin Loggenberg</td>\n",
              "      <td>2in6mai5r3208mgdii49rtu662_20240313T080000Z</td>\n",
              "      <td>3487</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8956</th>\n",
              "      <td>Group A_02 Coaching Session</td>\n",
              "      <td>2024-03-13T11:00:00+02:00</td>\n",
              "      <td>2024-03-13T11:45:00+02:00</td>\n",
              "      <td>11:00:00</td>\n",
              "      <td>11:45:00</td>\n",
              "      <td>confirmed</td>\n",
              "      <td>2024-03-13T11:53:17+02:00</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>Benjamin Loggenberg</td>\n",
              "      <td>0ojf2d6899bndslkp2q129l62q_20240313T090000Z</td>\n",
              "      <td>3030</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8957 rows × 11 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b3c8ba2-ca27-4279-9925-a69d430a110d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1b3c8ba2-ca27-4279-9925-a69d430a110d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1b3c8ba2-ca27-4279-9925-a69d430a110d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-816796b0-5b4a-4a93-8584-e930cce322af\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-816796b0-5b4a-4a93-8584-e930cce322af')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-816796b0-5b4a-4a93-8584-e930cce322af button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "final_report",
              "summary": "{\n  \"name\": \"final_report\",\n  \"rows\": 8957,\n  \"fields\": [\n    {\n      \"column\": \"Title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 305,\n        \"samples\": [\n          \"Josh / Saaj \",\n          \"FTO2401 Coach Check-In\",\n          \"Update on petty cash\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Start\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 494,\n        \"samples\": [\n          \"2024-01-08T16:00:00+02:00\",\n          \"2024-03-07T14:45:00+02:00\",\n          \"2024-02-15T11:00:00+02:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"End\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 522,\n        \"samples\": [\n          \"2024-04-04T11:15:00+02:00\",\n          \"2024-02-07T11:30:00+02:00\",\n          \"2024-01-22T10:45:00+02:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Start Time\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 52,\n        \"samples\": [\n          \"18:00:00\",\n          \"16:30:00\",\n          \"18:04:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"End Time\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 65,\n        \"samples\": [\n          \"12:45:00\",\n          \"18:19:00\",\n          \"16:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"confirmed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 3287,\n        \"samples\": [\n          \"2024-02-20T17:02:18+02:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 224,\n        \"samples\": [\n          \"elzabe@codespace.co.za\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 235,\n        \"samples\": [\n          \"Laurence Elizabeth\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Calendar event ID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 751,\n        \"samples\": [\n          \"j9a3ufb7uj4egi46uq21dvv3n8_20240304T150000Z\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration (seconds)\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2744,\n        \"samples\": [\n          \"1057\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 4
        }
      ],
      "source": [
        "import gspread\n",
        "from oauth2client.service_account import ServiceAccountCredentials\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import json\n",
        "from google.colab import userdata\n",
        "from google.oauth2 import service_account\n",
        "from googleapiclient.discovery import build\n",
        "from datetime import datetime\n",
        "from google.oauth2.service_account import Credentials\n",
        "\n",
        "pd.set_option('display.max_rows', 200)\n",
        "\n",
        "# Get the secret from userdata\n",
        "secret = userdata.get('onyx-outpost-401812-739fa11b3839.json')\n",
        "secret1 = userdata.get('calendar-422608-2e109f2054ba.json')\n",
        "\n",
        "# Convert the secret to a dictionary\n",
        "secret_dict = json.loads(secret)\n",
        "\n",
        "scope = ['https://spreadsheets.google.com/feeds', 'https://www.googleapis.com/auth/spreadsheets', 'https://www.googleapis.com/auth/drive']\n",
        "\n",
        "# Use the secret to authorize the client\n",
        "creds = ServiceAccountCredentials.from_json_keyfile_dict(secret_dict, scope)\n",
        "client = gspread.authorize(creds)\n",
        "\n",
        "def sheet_to_df(sheet_name, worksheet_identifier=0):\n",
        "    \"\"\"\n",
        "    Fetches data from a specified Google Sheet tab and returns it as a pandas DataFrame.\n",
        "\n",
        "    Parameters:\n",
        "    - sheet_name: Name of the Google Sheet.\n",
        "    - worksheet_identifier: Index (int) or title (str) of the worksheet/tab.\n",
        "\n",
        "    Returns:\n",
        "    - A pandas DataFrame containing the data from the specified Google Sheet tab.\n",
        "    \"\"\"\n",
        "    # Open the specified Google Sheet\n",
        "    sheet = client.open(sheet_name)\n",
        "\n",
        "    # Access the worksheet by index or title\n",
        "    if isinstance(worksheet_identifier, int):\n",
        "        worksheet = sheet.get_worksheet(worksheet_identifier)\n",
        "    else:\n",
        "        worksheet = sheet.worksheet(worksheet_identifier)\n",
        "\n",
        "    # Get all values in the worksheet\n",
        "    data = worksheet.get_all_values()\n",
        "\n",
        "    # Create and return a DataFrame\n",
        "    return pd.DataFrame(data[1:], columns=data[0])\n",
        "\n",
        "# Fetch data from Google Sheets\n",
        "df2 = sheet_to_df('Attendance Test', 'meet_log_2024_26_April')  # Tab named 'TabTitle'\n",
        "\n",
        "# List of email addresses\n",
        "names = ['che@codespace.co.za', 'chad@codespace.co.za', 'nwabisa@codespace.co.za', 'kenneth@codespace.co.za', 'sasha@codespace.co.za', 'naeem@codespace.co.za', 'joshua@codespace.co.za', 'janizol@codespace.co.za', 'owen@codespace.co.za', 'chemonique@codespace.co.za', 'zachary@codespace.co.za', 'kevin@codespace.co.za', 'elzabe@codespace.co.za', 'riko@codespace.co.za', 'benjamin@codespace.co.za']\n",
        "\n",
        "# Initialize an empty list to hold the event data\n",
        "event_data = []\n",
        "\n",
        "# Convert the second secret to a dictionary\n",
        "secret_dict1 = json.loads(secret1)\n",
        "\n",
        "# Define the scope for the Google Calendar API\n",
        "scope = ['https://www.googleapis.com/auth/calendar']\n",
        "\n",
        "# Iterate over each email address\n",
        "for name in names:\n",
        "    # Load the credentials\n",
        "    creds = Credentials.from_service_account_info(secret_dict1, scopes=scope, subject=name)\n",
        "\n",
        "    # Build the service\n",
        "    service = build('calendar', 'v3', credentials=creds)\n",
        "\n",
        "    # Get the events from the calendar\n",
        "    events_result = service.events().list(calendarId='primary', singleEvents=True, timeMin='2024-01-01T00:00:00Z').execute()\n",
        "    events = events_result.get('items', [])\n",
        "\n",
        "    # Handle pagination\n",
        "    while 'nextPageToken' in events_result:\n",
        "        page_token = events_result['nextPageToken']\n",
        "        events_result = service.events().list(calendarId='primary', singleEvents=True, timeMin='2024-01-01T00:00:00Z', pageToken=page_token).execute()\n",
        "        events.extend(events_result.get('items', []))\n",
        "\n",
        "    # Iterate over each event\n",
        "    for event in events:\n",
        "        # Check if the event is a public holiday\n",
        "        if 'Holiday' in event.get('summary', '') or 'Holiday' in event.get('description', ''):\n",
        "            continue  # Skip this event\n",
        "\n",
        "        # Extract the necessary details\n",
        "        start = event['start'].get('dateTime', event['start'].get('date'))\n",
        "        end = event['end'].get('dateTime', event['end'].get('date'))\n",
        "        event_details = [\n",
        "            event.get('summary', ''),\n",
        "            start,\n",
        "            end,\n",
        "            datetime.strptime(start, '%Y-%m-%dT%H:%M:%S%z').time() if 'dateTime' in event['start'] else '',\n",
        "            datetime.strptime(end, '%Y-%m-%dT%H:%M:%S%z').time() if 'dateTime' in event['end'] else '',\n",
        "            event.get('recurrence', [''])[0] if 'recurrence' in event else '',\n",
        "            event.get('description', ''),\n",
        "            event.get('location', ''),\n",
        "            event.get('timeZone', ''),\n",
        "            [attendee.get('email') for attendee in event.get('attendees', [])],\n",
        "            event.get('id', ''),\n",
        "            event.get('htmlLink', ''),\n",
        "            event.get('hangoutLink', ''),\n",
        "            event.get('status', '')  # Fetch the status of the event\n",
        "        ]\n",
        "        # Add the event details to the list\n",
        "        event_data.append(event_details)\n",
        "\n",
        "# Create a dataframe from the event data\n",
        "df = pd.DataFrame(event_data, columns=['Title', 'Start', 'End', 'Start Time', 'End Time', 'Repeat', 'Description', 'Location', 'Timezone', 'Guests', 'Event ID', 'Link', 'Meet', 'Status'])  # Include 'Status' in the column names\n",
        "\n",
        "# Drop rows where 'Start Time' or 'End Time' is missing\n",
        "df = df.dropna(subset=['Start Time', 'End Time'])\n",
        "\n",
        "# If you want to drop rows where either 'Start Time' or 'End Time' is an empty string\n",
        "df = df[(df['Start Time'] != '') & (df['End Time'] != '')]\n",
        "# Create a dataframe from the event data\n",
        "df1 = pd.DataFrame(event_data, columns=['Title', 'Start', 'End', 'Start Time', 'End Time', 'Repeat', 'Description', 'Location', 'Timezone', 'Guests', 'Event ID', 'Link', 'Meet', 'Status'])  # Include 'Status' in the column names\n",
        "\n",
        "# Drop rows where 'Start Time' or 'End Time' is missing\n",
        "df1 = df1.dropna(subset=['Start Time', 'End Time'])\n",
        "\n",
        "# If you want to drop rows where either 'Start Time' or 'End Time' is an empty string\n",
        "df1 = df1[(df1['Start Time'] != '') & (df1['End Time'] != '')]\n",
        "\n",
        "# Merge df1 and df2\n",
        "merged_df = pd.merge(df1, df2, left_on='Event ID', right_on='Calendar event ID', how='inner')\n",
        "\n",
        "# List of columns to keep from df1\n",
        "columns_df1 = ['Title', 'Start', 'End', 'Start Time', 'End Time', 'Status']\n",
        "\n",
        "# List of columns to keep from df2\n",
        "columns_df2 = ['Date', 'Actor', 'Actor name', 'Calendar event ID', 'Duration (seconds)']\n",
        "\n",
        "# Combine the lists to form the final column list for the merged dataframe\n",
        "final_columns = columns_df1 + columns_df2\n",
        "\n",
        "# Select only the specified columns from the merged dataframe\n",
        "final_report = merged_df[final_columns]\n",
        "\n",
        "final_report"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fmwcQ3A0AfkQ",
        "outputId": "04af2c78-f060-44ea-91d9-6cc6f8fa455d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-5-ccdca857b3c1>:2: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  df1['Guests'] = df1['Guests'].apply(tuple)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "47651"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ],
      "source": [
        "# Convert lists in 'Guests' column to tuples\n",
        "df1['Guests'] = df1['Guests'].apply(tuple)\n",
        "\n",
        "# Now try dropping duplicates\n",
        "df1.drop_duplicates(inplace=True)\n",
        "len(df1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 930
        },
        "id": "WxsFS0UUAfkQ",
        "outputId": "7be601df-3f5a-47c4-818d-8058e30dd0a5"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-6-bcd98ffcf15f>:16: UserWarning: Could not infer format, so each element will be parsed individually, falling back to `dateutil`. To ensure parsing is consistent and as-expected, please specify a format.\n",
            "  final_report.loc[:, 'Start DateTime'] = pd.to_datetime(final_report.loc[:, 'Start'] + ' ' + final_report.loc[:, 'Start Time'].astype(str))\n",
            "<ipython-input-6-bcd98ffcf15f>:16: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  final_report.loc[:, 'Start DateTime'] = pd.to_datetime(final_report.loc[:, 'Start'] + ' ' + final_report.loc[:, 'Start Time'].astype(str))\n",
            "<ipython-input-6-bcd98ffcf15f>:17: UserWarning: Could not infer format, so each element will be parsed individually, falling back to `dateutil`. To ensure parsing is consistent and as-expected, please specify a format.\n",
            "  final_report.loc[:, 'End DateTime'] = pd.to_datetime(final_report.loc[:, 'End'] + ' ' + final_report.loc[:, 'End Time'].astype(str))\n",
            "<ipython-input-6-bcd98ffcf15f>:17: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  final_report.loc[:, 'End DateTime'] = pd.to_datetime(final_report.loc[:, 'End'] + ' ' + final_report.loc[:, 'End Time'].astype(str))\n",
            "<ipython-input-6-bcd98ffcf15f>:23: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  final_report['Date'] = pd.to_datetime(final_report['Date'])\n",
            "<ipython-input-6-bcd98ffcf15f>:24: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  final_report['Date'] = final_report['Date']\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                             Title     Status                      Date  \\\n",
              "0               Coach SDF Training  confirmed 2024-01-08 15:50:54+02:00   \n",
              "1               Coach SDF Training  confirmed 2024-01-08 15:49:42+02:00   \n",
              "2               Coach SDF Training  confirmed 2024-01-08 15:49:38+02:00   \n",
              "3               Coach SDF Training  confirmed 2024-01-08 15:48:50+02:00   \n",
              "4               Coach SDF Training  confirmed 2024-01-08 15:48:48+02:00   \n",
              "...                            ...        ...                       ...   \n",
              "8952  Group A_02 Coaching Session   confirmed 2024-03-11 11:42:13+02:00   \n",
              "8953  Group A_01 Coaching Session   confirmed 2024-03-11 10:44:39+02:00   \n",
              "8954  Group A_01 Coaching Session   confirmed 2024-03-13 09:32:08+02:00   \n",
              "8955  Group A_01 Coaching Session   confirmed 2024-03-13 10:59:32+02:00   \n",
              "8956  Group A_02 Coaching Session   confirmed 2024-03-13 11:53:17+02:00   \n",
              "\n",
              "                         Actor           Actor name  \\\n",
              "0        kevin@codespace.co.za        Kevin Mbuisha   \n",
              "1        renzo@codespace.co.za        Renzo van Wyk   \n",
              "2         riko@codespace.co.za        Riko Wolhuter   \n",
              "3         owen@codespace.co.za      Owen Rambanduli   \n",
              "4      saajida@codespace.co.za       Saajida Mathen   \n",
              "...                        ...                  ...   \n",
              "8952  benjamin@codespace.co.za  Benjamin Loggenberg   \n",
              "8953  benjamin@codespace.co.za  Benjamin Loggenberg   \n",
              "8954  benjamin@codespace.co.za  Benjamin Loggenberg   \n",
              "8955  benjamin@codespace.co.za  Benjamin Loggenberg   \n",
              "8956  benjamin@codespace.co.za  Benjamin Loggenberg   \n",
              "\n",
              "                                Calendar event ID  Duration (seconds)  \\\n",
              "0                      3lrvq2pu6ft5chrfbvtqdegrvv                8347   \n",
              "1                      3lrvq2pu6ft5chrfbvtqdegrvv                5517   \n",
              "2                      3lrvq2pu6ft5chrfbvtqdegrvv                8406   \n",
              "3                      3lrvq2pu6ft5chrfbvtqdegrvv                5815   \n",
              "4                      3lrvq2pu6ft5chrfbvtqdegrvv                8277   \n",
              "...                                           ...                 ...   \n",
              "8952  0ojf2d6899bndslkp2q129l62q_20240311T090000Z                2353   \n",
              "8953  2in6mai5r3208mgdii49rtu662_20240311T080000Z                3019   \n",
              "8954  2in6mai5r3208mgdii49rtu662_20240313T080000Z                1831   \n",
              "8955  2in6mai5r3208mgdii49rtu662_20240313T080000Z                3487   \n",
              "8956  0ojf2d6899bndslkp2q129l62q_20240313T090000Z                3030   \n",
              "\n",
              "                Start DateTime              End DateTime  \n",
              "0    2024-01-08 13:30:00+02:00 2024-01-08 16:00:00+02:00  \n",
              "1    2024-01-08 13:30:00+02:00 2024-01-08 16:00:00+02:00  \n",
              "2    2024-01-08 13:30:00+02:00 2024-01-08 16:00:00+02:00  \n",
              "3    2024-01-08 13:30:00+02:00 2024-01-08 16:00:00+02:00  \n",
              "4    2024-01-08 13:30:00+02:00 2024-01-08 16:00:00+02:00  \n",
              "...                        ...                       ...  \n",
              "8952 2024-03-11 11:00:00+02:00 2024-03-11 12:00:00+02:00  \n",
              "8953 2024-03-11 09:50:00+02:00 2024-03-11 10:50:00+02:00  \n",
              "8954 2024-03-13 10:00:00+02:00 2024-03-13 10:45:00+02:00  \n",
              "8955 2024-03-13 10:00:00+02:00 2024-03-13 10:45:00+02:00  \n",
              "8956 2024-03-13 11:00:00+02:00 2024-03-13 11:45:00+02:00  \n",
              "\n",
              "[8957 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-163aec7c-6f32-4a04-a951-3d3c9f277239\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Title</th>\n",
              "      <th>Status</th>\n",
              "      <th>Date</th>\n",
              "      <th>Actor</th>\n",
              "      <th>Actor name</th>\n",
              "      <th>Calendar event ID</th>\n",
              "      <th>Duration (seconds)</th>\n",
              "      <th>Start DateTime</th>\n",
              "      <th>End DateTime</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Coach SDF Training</td>\n",
              "      <td>confirmed</td>\n",
              "      <td>2024-01-08 15:50:54+02:00</td>\n",
              "      <td>kevin@codespace.co.za</td>\n",
              "      <td>Kevin Mbuisha</td>\n",
              "      <td>3lrvq2pu6ft5chrfbvtqdegrvv</td>\n",
              "      <td>8347</td>\n",
              "      <td>2024-01-08 13:30:00+02:00</td>\n",
              "      <td>2024-01-08 16:00:00+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Coach SDF Training</td>\n",
              "      <td>confirmed</td>\n",
              "      <td>2024-01-08 15:49:42+02:00</td>\n",
              "      <td>renzo@codespace.co.za</td>\n",
              "      <td>Renzo van Wyk</td>\n",
              "      <td>3lrvq2pu6ft5chrfbvtqdegrvv</td>\n",
              "      <td>5517</td>\n",
              "      <td>2024-01-08 13:30:00+02:00</td>\n",
              "      <td>2024-01-08 16:00:00+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Coach SDF Training</td>\n",
              "      <td>confirmed</td>\n",
              "      <td>2024-01-08 15:49:38+02:00</td>\n",
              "      <td>riko@codespace.co.za</td>\n",
              "      <td>Riko Wolhuter</td>\n",
              "      <td>3lrvq2pu6ft5chrfbvtqdegrvv</td>\n",
              "      <td>8406</td>\n",
              "      <td>2024-01-08 13:30:00+02:00</td>\n",
              "      <td>2024-01-08 16:00:00+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Coach SDF Training</td>\n",
              "      <td>confirmed</td>\n",
              "      <td>2024-01-08 15:48:50+02:00</td>\n",
              "      <td>owen@codespace.co.za</td>\n",
              "      <td>Owen Rambanduli</td>\n",
              "      <td>3lrvq2pu6ft5chrfbvtqdegrvv</td>\n",
              "      <td>5815</td>\n",
              "      <td>2024-01-08 13:30:00+02:00</td>\n",
              "      <td>2024-01-08 16:00:00+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Coach SDF Training</td>\n",
              "      <td>confirmed</td>\n",
              "      <td>2024-01-08 15:48:48+02:00</td>\n",
              "      <td>saajida@codespace.co.za</td>\n",
              "      <td>Saajida Mathen</td>\n",
              "      <td>3lrvq2pu6ft5chrfbvtqdegrvv</td>\n",
              "      <td>8277</td>\n",
              "      <td>2024-01-08 13:30:00+02:00</td>\n",
              "      <td>2024-01-08 16:00:00+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8952</th>\n",
              "      <td>Group A_02 Coaching Session</td>\n",
              "      <td>confirmed</td>\n",
              "      <td>2024-03-11 11:42:13+02:00</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>Benjamin Loggenberg</td>\n",
              "      <td>0ojf2d6899bndslkp2q129l62q_20240311T090000Z</td>\n",
              "      <td>2353</td>\n",
              "      <td>2024-03-11 11:00:00+02:00</td>\n",
              "      <td>2024-03-11 12:00:00+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8953</th>\n",
              "      <td>Group A_01 Coaching Session</td>\n",
              "      <td>confirmed</td>\n",
              "      <td>2024-03-11 10:44:39+02:00</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>Benjamin Loggenberg</td>\n",
              "      <td>2in6mai5r3208mgdii49rtu662_20240311T080000Z</td>\n",
              "      <td>3019</td>\n",
              "      <td>2024-03-11 09:50:00+02:00</td>\n",
              "      <td>2024-03-11 10:50:00+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8954</th>\n",
              "      <td>Group A_01 Coaching Session</td>\n",
              "      <td>confirmed</td>\n",
              "      <td>2024-03-13 09:32:08+02:00</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>Benjamin Loggenberg</td>\n",
              "      <td>2in6mai5r3208mgdii49rtu662_20240313T080000Z</td>\n",
              "      <td>1831</td>\n",
              "      <td>2024-03-13 10:00:00+02:00</td>\n",
              "      <td>2024-03-13 10:45:00+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8955</th>\n",
              "      <td>Group A_01 Coaching Session</td>\n",
              "      <td>confirmed</td>\n",
              "      <td>2024-03-13 10:59:32+02:00</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>Benjamin Loggenberg</td>\n",
              "      <td>2in6mai5r3208mgdii49rtu662_20240313T080000Z</td>\n",
              "      <td>3487</td>\n",
              "      <td>2024-03-13 10:00:00+02:00</td>\n",
              "      <td>2024-03-13 10:45:00+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8956</th>\n",
              "      <td>Group A_02 Coaching Session</td>\n",
              "      <td>confirmed</td>\n",
              "      <td>2024-03-13 11:53:17+02:00</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>Benjamin Loggenberg</td>\n",
              "      <td>0ojf2d6899bndslkp2q129l62q_20240313T090000Z</td>\n",
              "      <td>3030</td>\n",
              "      <td>2024-03-13 11:00:00+02:00</td>\n",
              "      <td>2024-03-13 11:45:00+02:00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8957 rows × 9 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-163aec7c-6f32-4a04-a951-3d3c9f277239')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-163aec7c-6f32-4a04-a951-3d3c9f277239 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-163aec7c-6f32-4a04-a951-3d3c9f277239');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b9b40241-352d-4764-823b-c67308ad51c5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b9b40241-352d-4764-823b-c67308ad51c5')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b9b40241-352d-4764-823b-c67308ad51c5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "final_report",
              "summary": "{\n  \"name\": \"final_report\",\n  \"rows\": 8957,\n  \"fields\": [\n    {\n      \"column\": \"Title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 305,\n        \"samples\": [\n          \"Josh / Saaj \",\n          \"FTO2401 Coach Check-In\",\n          \"Update on petty cash\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"confirmed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-05 09:28:38+02:00\",\n        \"max\": \"2024-04-04 13:59:11+02:00\",\n        \"num_unique_values\": 3287,\n        \"samples\": [\n          \"2024-02-20 17:02:18+02:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 224,\n        \"samples\": [\n          \"elzabe@codespace.co.za\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 235,\n        \"samples\": [\n          \"Laurence Elizabeth\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Calendar event ID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 751,\n        \"samples\": [\n          \"j9a3ufb7uj4egi46uq21dvv3n8_20240304T150000Z\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration (seconds)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2238,\n        \"min\": 0,\n        \"max\": 12664,\n        \"num_unique_values\": 2744,\n        \"samples\": [\n          1057\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Start DateTime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-05 09:30:00+02:00\",\n        \"max\": \"2024-04-04 13:00:00+02:00\",\n        \"num_unique_values\": 494,\n        \"samples\": [\n          \"2024-01-08 16:00:00+02:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"End DateTime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-05 10:30:00+02:00\",\n        \"max\": \"2024-04-04 16:30:00+02:00\",\n        \"num_unique_values\": 522,\n        \"samples\": [\n          \"2024-04-04 11:15:00+02:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 6
        }
      ],
      "source": [
        "# Filter the dataframe\n",
        "final_df_filtered = df2[df2['Description'] == 'The endpoint left a video meeting']\n",
        "\n",
        "# Count the remaining records\n",
        "total_records = len(final_df_filtered)\n",
        "\n",
        "# Strip leading and trailing spaces from all columns in df1 and df2\n",
        "df1 = df1.applymap(lambda x: x.strip() if isinstance(x, str) else x)\n",
        "df2 = df2.applymap(lambda x: x.strip() if isinstance(x, str) else x)\n",
        "\n",
        "# Drop rows with no records in df1 and df2\n",
        "df1 = df1.dropna(how='all')\n",
        "df2 = df2.dropna(how='all')\n",
        "\n",
        "# Combine the date and time columns into datetime columns\n",
        "final_report.loc[:, 'Start DateTime'] = pd.to_datetime(final_report.loc[:, 'Start'] + ' ' + final_report.loc[:, 'Start Time'].astype(str))\n",
        "final_report.loc[:, 'End DateTime'] = pd.to_datetime(final_report.loc[:, 'End'] + ' ' + final_report.loc[:, 'End Time'].astype(str))\n",
        "\n",
        "# Make the datetime columns timezone aware (replace 'UTC' with your desired timezone)\n",
        "final_report.loc[:, 'Start DateTime'] = final_report.loc[:, 'Start DateTime']\n",
        "final_report.loc[:, 'End DateTime'] = final_report.loc[:, 'End DateTime']\n",
        "\n",
        "final_report['Date'] = pd.to_datetime(final_report['Date'])\n",
        "final_report['Date'] = final_report['Date']\n",
        "\n",
        "# Drop the old date and time columns\n",
        "final_report = final_report.drop(['Start', 'End', 'Start Time', 'End Time'], axis=1)\n",
        "\n",
        "# Convert 'Duration (seconds)' to int64\n",
        "final_report['Duration (seconds)'] = final_report['Duration (seconds)'].astype('int64')\n",
        "\n",
        "final_report"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dP_Ak2tfAfkQ",
        "outputId": "4937dbd8-cfbb-4f6b-cc5a-1c323a1d9213"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6817"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ],
      "source": [
        "# Identify duplicate records based on 'Title', 'Actor', and 'Calendar event ID'\n",
        "duplicates = final_report.duplicated(subset=['Title', 'Actor', 'Calendar event ID'], keep=False)\n",
        "\n",
        "# Filter for duplicate records\n",
        "duplicate_records = final_report[duplicates]\n",
        "\n",
        "# Display duplicate records\n",
        "len(duplicate_records)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "KiUQwhj5AfkR"
      },
      "outputs": [],
      "source": [
        "# Drop duplicates\n",
        "final_report.drop_duplicates(inplace=True)\n",
        "\n",
        "# Drop rows where 'Actor' is blank\n",
        "final_report = final_report[final_report['Actor'] != '']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JEg64RfRAfkR",
        "outputId": "fd43f543-37a4-40ac-c501-8b3bb3ee8360"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-9-0f77b9af3090>:4: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  final_report['Start DateTime'] = pd.to_datetime(final_report['Start DateTime'])\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Actor\n",
              "che@codespace.co.za           140\n",
              "joshua@codespace.co.za        114\n",
              "chad@codespace.co.za          110\n",
              "nwabisa@codespace.co.za       104\n",
              "sasha@codespace.co.za          81\n",
              "kenneth@codespace.co.za        81\n",
              "owen@codespace.co.za           78\n",
              "riko@codespace.co.za           71\n",
              "chemonique@codespace.co.za     68\n",
              "janizol@codespace.co.za        61\n",
              "zachary@codespace.co.za        59\n",
              "elzabe@codespace.co.za         58\n",
              "naeem@codespace.co.za          58\n",
              "benjamin@codespace.co.za       42\n",
              "kevin@codespace.co.za          31\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ],
      "source": [
        "names = ['che@codespace.co.za', 'chad@codespace.co.za', 'nwabisa@codespace.co.za', 'kenneth@codespace.co.za', 'sasha@codespace.co.za', 'naeem@codespace.co.za', 'joshua@codespace.co.za', 'janizol@codespace.co.za', 'owen@codespace.co.za', 'chemonique@codespace.co.za', 'zachary@codespace.co.za', 'kevin@codespace.co.za', 'elzabe@codespace.co.za', 'riko@codespace.co.za', 'benjamin@codespace.co.za']\n",
        "\n",
        "# Ensure 'Start' is in datetime format\n",
        "final_report['Start DateTime'] = pd.to_datetime(final_report['Start DateTime'])\n",
        "\n",
        "# Filter for actors in names list and start date after 01/01/2024\n",
        "filtered_report = final_report[(final_report['Actor'].isin(names)) & (final_report['Start DateTime'] > '2024-01-01')]\n",
        "\n",
        "counts = filtered_report['Actor'].value_counts()\n",
        "counts"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hi-hE3NwAfkR",
        "outputId": "0e483c5f-f74e-4692-8ae6-a80b7f375633"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of records before groupby: 3860\n",
            "Number of records after groupby: 3131\n"
          ]
        }
      ],
      "source": [
        "# Count the number of records before the groupby operation\n",
        "count_before_groupby = len(final_report)\n",
        "\n",
        "# Group by 'Title', 'Actor', and 'Calendar event ID' and aggregate the necessary ones\n",
        "final_report = final_report.groupby(['Title', 'Actor', 'Calendar event ID', 'Start DateTime', 'End DateTime']).agg({'Duration (seconds)': 'sum', 'Date': 'max'}).reset_index()\n",
        "\n",
        "# Count the number of records after the groupby operation\n",
        "count_after_groupby = len(final_report)\n",
        "\n",
        "print(f\"Number of records before groupby: {count_before_groupby}\")\n",
        "print(f\"Number of records after groupby: {count_after_groupby}\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "sM2XyO-VAfkR",
        "outputId": "c51f8bea-abce-432c-bf17-47693c54aa1f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                        Title                     Actor  \\\n",
              "750               Coaching Session_Group A_01  benjamin@codespace.co.za   \n",
              "751               Coaching Session_Group A_01  benjamin@codespace.co.za   \n",
              "752               Coaching Session_Group A_01  benjamin@codespace.co.za   \n",
              "753               Coaching Session_Group A_01  benjamin@codespace.co.za   \n",
              "754               Coaching Session_Group A_01  benjamin@codespace.co.za   \n",
              "755               Coaching Session_Group A_01  benjamin@codespace.co.za   \n",
              "756               Coaching Session_Group A_01  benjamin@codespace.co.za   \n",
              "757               Coaching Session_Group A_01  benjamin@codespace.co.za   \n",
              "758               Coaching Session_Group A_01  benjamin@codespace.co.za   \n",
              "759               Coaching Session_Group A_01  benjamin@codespace.co.za   \n",
              "924              Coaching Session__Group A_02  benjamin@codespace.co.za   \n",
              "925              Coaching Session__Group A_02  benjamin@codespace.co.za   \n",
              "926              Coaching Session__Group A_02  benjamin@codespace.co.za   \n",
              "927              Coaching Session__Group A_02  benjamin@codespace.co.za   \n",
              "928              Coaching Session__Group A_02  benjamin@codespace.co.za   \n",
              "929              Coaching Session__Group A_02  benjamin@codespace.co.za   \n",
              "930              Coaching Session__Group A_02  benjamin@codespace.co.za   \n",
              "931              Coaching Session__Group A_02  benjamin@codespace.co.za   \n",
              "932              Coaching Session__Group A_02  benjamin@codespace.co.za   \n",
              "933              Coaching Session__Group A_02  benjamin@codespace.co.za   \n",
              "1101  Component Lecture - SDF11 Focus_Group A  benjamin@codespace.co.za   \n",
              "1144            Component Lecture 3️⃣_Group A  benjamin@codespace.co.za   \n",
              "1175           Component Lecture 4️⃣__Group A  benjamin@codespace.co.za   \n",
              "1176            Component Lecture 5️⃣_Group A  benjamin@codespace.co.za   \n",
              "1537             Group A_01 Coaching Session   benjamin@codespace.co.za   \n",
              "1538             Group A_01 Coaching Session   benjamin@codespace.co.za   \n",
              "1539             Group A_02 Coaching Session   benjamin@codespace.co.za   \n",
              "1540             Group A_02 Coaching Session   benjamin@codespace.co.za   \n",
              "3063  📝🧍🏽BCL: Coach X CTL X CC - Stand-up🧍🏽 📝  benjamin@codespace.co.za   \n",
              "3064  📝🧍🏽BCL: Coach X CTL X CC - Stand-up🧍🏽 📝  benjamin@codespace.co.za   \n",
              "3065  📝🧍🏽BCL: Coach X CTL X CC - Stand-up🧍🏽 📝  benjamin@codespace.co.za   \n",
              "3066  📝🧍🏽BCL: Coach X CTL X CC - Stand-up🧍🏽 📝  benjamin@codespace.co.za   \n",
              "3067  📝🧍🏽BCL: Coach X CTL X CC - Stand-up🧍🏽 📝  benjamin@codespace.co.za   \n",
              "\n",
              "                                Calendar event ID            Start DateTime  \\\n",
              "750                    1calgal6j1sdo3cumjhslm481b 2024-02-19 10:00:00+02:00   \n",
              "751                    1niat47688pqpotpin3b3vgb36 2024-02-12 10:00:00+02:00   \n",
              "752                    2nmtv55hl3lh3t87kfnpcvhbvg 2024-02-14 10:00:00+02:00   \n",
              "753                    3vm80eh82djkmhrh556pipuqji 2024-01-22 10:00:00+02:00   \n",
              "754                    497h9hc4b941dc3ph9pcjrshg4 2024-01-24 10:00:00+02:00   \n",
              "755                    4ukt0j4o12kiadlffd3hg76v0n 2024-02-05 10:00:00+02:00   \n",
              "756                    5e594e7jot2087a7nkpi4dhc0b 2024-02-07 10:00:00+02:00   \n",
              "757                    6eg02ojih1ovhoo0nmj6fn951e 2024-01-29 10:00:00+02:00   \n",
              "758                    6pldgr6ol540akkvo4mc57p1ge 2024-01-31 10:00:00+02:00   \n",
              "759                    hhqejk8h1ra7rabha03odfe6bs 2024-01-17 10:00:00+02:00   \n",
              "924                    0kgpeogb8i2mjl0alfmc65pvf2 2024-01-24 11:00:00+02:00   \n",
              "925                    15ovvumepsi63hdpl8mbr6pd79 2024-01-31 11:00:00+02:00   \n",
              "926                    3kjf1spt5rmgvln18ifg0tajc0 2024-02-12 11:00:00+02:00   \n",
              "927                    4mqb6vufmf43ffjr45v62j351d 2024-01-22 11:00:00+02:00   \n",
              "928                    58gublb90d4ra3h5ft9074gbv8 2024-02-14 11:00:00+02:00   \n",
              "929                    6g2galilsf7il1ff0qmvil6gvb 2024-01-17 11:00:00+02:00   \n",
              "930                    6l2gdlra5bfj86gs1a3rb0jju1 2024-02-05 11:00:00+02:00   \n",
              "931                    6u8f27i7bq4l26diim49769s8a 2024-01-29 11:00:00+02:00   \n",
              "932                    6un6nids49raiq2jtqmnn9flfk 2024-02-19 11:00:00+02:00   \n",
              "933                    7lb7vbpocoskrm3ggmo33ml4q4 2024-02-07 11:00:00+02:00   \n",
              "1101                   4i6aeb4od0t5609ipmu1f3q3mr 2024-02-28 10:30:00+02:00   \n",
              "1144                   54tu3gdtnks9cng7jhubjfb7cj 2024-02-26 09:00:00+02:00   \n",
              "1175                   4hpg21h5j0npdoqqtlddeic7om 2024-02-26 10:30:00+02:00   \n",
              "1176                   7m5p3qutgjl0pdec6lo8426ru5 2024-02-28 09:00:00+02:00   \n",
              "1537  2in6mai5r3208mgdii49rtu662_20240311T080000Z 2024-03-11 09:50:00+02:00   \n",
              "1538  2in6mai5r3208mgdii49rtu662_20240313T080000Z 2024-03-13 10:00:00+02:00   \n",
              "1539  0ojf2d6899bndslkp2q129l62q_20240311T090000Z 2024-03-11 11:00:00+02:00   \n",
              "1540  0ojf2d6899bndslkp2q129l62q_20240313T090000Z 2024-03-13 11:00:00+02:00   \n",
              "3063  0vu2k3rvvl0kfupqvb4tvr1b06_20240131T070000Z 2024-01-31 09:00:00+02:00   \n",
              "3064  0vu2k3rvvl0kfupqvb4tvr1b06_20240313T070000Z 2024-03-13 09:00:00+02:00   \n",
              "3065  0vu2k3rvvl0kfupqvb4tvr1b06_20240320T070000Z 2024-03-20 09:00:00+02:00   \n",
              "3066  0vu2k3rvvl0kfupqvb4tvr1b06_20240327T070000Z 2024-03-27 09:00:00+02:00   \n",
              "3067  0vu2k3rvvl0kfupqvb4tvr1b06_20240403T070000Z 2024-04-03 09:00:00+02:00   \n",
              "\n",
              "                  End DateTime  Duration (seconds)                      Date  \n",
              "750  2024-02-19 10:45:00+02:00                2818 2024-02-19 10:50:04+02:00  \n",
              "751  2024-02-12 10:45:00+02:00                3427 2024-02-12 10:59:24+02:00  \n",
              "752  2024-02-14 10:45:00+02:00                2535 2024-02-14 10:43:55+02:00  \n",
              "753  2024-01-22 10:45:00+02:00                3049 2024-01-22 10:51:24+02:00  \n",
              "754  2024-01-24 10:45:00+02:00                1660 2024-01-24 10:28:43+02:00  \n",
              "755  2024-02-05 10:45:00+02:00                3300 2024-02-05 10:55:42+02:00  \n",
              "756  2024-02-07 10:45:00+02:00                2545 2024-02-07 10:45:07+02:00  \n",
              "757  2024-01-29 10:45:00+02:00                2813 2024-01-29 10:49:04+02:00  \n",
              "758  2024-01-31 10:45:00+02:00                3224 2024-01-31 10:30:52+02:00  \n",
              "759  2024-01-17 10:45:00+02:00                2458 2024-01-17 10:41:42+02:00  \n",
              "924  2024-01-24 11:45:00+02:00                1816 2024-01-24 11:31:11+02:00  \n",
              "925  2024-01-31 11:45:00+02:00                2009 2024-01-31 11:35:34+02:00  \n",
              "926  2024-02-12 11:45:00+02:00                2681 2024-02-12 11:48:46+02:00  \n",
              "927  2024-01-22 11:45:00+02:00                2364 2024-01-22 11:41:14+02:00  \n",
              "928  2024-02-14 11:45:00+02:00                2038 2024-02-14 11:35:59+02:00  \n",
              "929  2024-01-17 11:45:00+02:00                2181 2024-01-17 11:37:28+02:00  \n",
              "930  2024-02-05 11:45:00+02:00                2517 2024-02-05 11:44:15+02:00  \n",
              "931  2024-01-29 11:45:00+02:00                1931 2024-01-29 11:34:57+02:00  \n",
              "932  2024-02-19 11:45:00+02:00                1765 2024-02-19 11:31:47+02:00  \n",
              "933  2024-02-07 11:45:00+02:00                2561 2024-02-07 11:48:08+02:00  \n",
              "1101 2024-02-28 11:30:00+02:00                1266 2024-02-28 10:53:58+02:00  \n",
              "1144 2024-02-26 10:00:00+02:00                3918 2024-02-26 09:50:10+02:00  \n",
              "1175 2024-02-26 11:30:00+02:00                3217 2024-02-26 11:30:10+02:00  \n",
              "1176 2024-02-28 10:00:00+02:00                3506 2024-02-28 10:04:04+02:00  \n",
              "1537 2024-03-11 10:50:00+02:00                3019 2024-03-11 10:44:39+02:00  \n",
              "1538 2024-03-13 10:45:00+02:00                5318 2024-03-13 10:59:32+02:00  \n",
              "1539 2024-03-11 12:00:00+02:00                2353 2024-03-11 11:42:13+02:00  \n",
              "1540 2024-03-13 11:45:00+02:00                3030 2024-03-13 11:53:17+02:00  \n",
              "3063 2024-01-31 09:30:00+02:00                1475 2024-01-31 09:27:00+02:00  \n",
              "3064 2024-03-13 09:20:00+02:00                1831 2024-03-13 09:32:08+02:00  \n",
              "3065 2024-03-20 10:00:00+02:00                9760 2024-03-20 09:29:15+02:00  \n",
              "3066 2024-03-27 09:30:00+02:00               10165 2024-03-27 09:26:56+02:00  \n",
              "3067 2024-04-03 09:30:00+02:00                 735 2024-04-03 09:13:31+02:00  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-caf3916d-f382-41e7-9412-8bbce62c74eb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Title</th>\n",
              "      <th>Actor</th>\n",
              "      <th>Calendar event ID</th>\n",
              "      <th>Start DateTime</th>\n",
              "      <th>End DateTime</th>\n",
              "      <th>Duration (seconds)</th>\n",
              "      <th>Date</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>750</th>\n",
              "      <td>Coaching Session_Group A_01</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>1calgal6j1sdo3cumjhslm481b</td>\n",
              "      <td>2024-02-19 10:00:00+02:00</td>\n",
              "      <td>2024-02-19 10:45:00+02:00</td>\n",
              "      <td>2818</td>\n",
              "      <td>2024-02-19 10:50:04+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>751</th>\n",
              "      <td>Coaching Session_Group A_01</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>1niat47688pqpotpin3b3vgb36</td>\n",
              "      <td>2024-02-12 10:00:00+02:00</td>\n",
              "      <td>2024-02-12 10:45:00+02:00</td>\n",
              "      <td>3427</td>\n",
              "      <td>2024-02-12 10:59:24+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>752</th>\n",
              "      <td>Coaching Session_Group A_01</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>2nmtv55hl3lh3t87kfnpcvhbvg</td>\n",
              "      <td>2024-02-14 10:00:00+02:00</td>\n",
              "      <td>2024-02-14 10:45:00+02:00</td>\n",
              "      <td>2535</td>\n",
              "      <td>2024-02-14 10:43:55+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>753</th>\n",
              "      <td>Coaching Session_Group A_01</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>3vm80eh82djkmhrh556pipuqji</td>\n",
              "      <td>2024-01-22 10:00:00+02:00</td>\n",
              "      <td>2024-01-22 10:45:00+02:00</td>\n",
              "      <td>3049</td>\n",
              "      <td>2024-01-22 10:51:24+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>754</th>\n",
              "      <td>Coaching Session_Group A_01</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>497h9hc4b941dc3ph9pcjrshg4</td>\n",
              "      <td>2024-01-24 10:00:00+02:00</td>\n",
              "      <td>2024-01-24 10:45:00+02:00</td>\n",
              "      <td>1660</td>\n",
              "      <td>2024-01-24 10:28:43+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>755</th>\n",
              "      <td>Coaching Session_Group A_01</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>4ukt0j4o12kiadlffd3hg76v0n</td>\n",
              "      <td>2024-02-05 10:00:00+02:00</td>\n",
              "      <td>2024-02-05 10:45:00+02:00</td>\n",
              "      <td>3300</td>\n",
              "      <td>2024-02-05 10:55:42+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>756</th>\n",
              "      <td>Coaching Session_Group A_01</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>5e594e7jot2087a7nkpi4dhc0b</td>\n",
              "      <td>2024-02-07 10:00:00+02:00</td>\n",
              "      <td>2024-02-07 10:45:00+02:00</td>\n",
              "      <td>2545</td>\n",
              "      <td>2024-02-07 10:45:07+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>757</th>\n",
              "      <td>Coaching Session_Group A_01</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>6eg02ojih1ovhoo0nmj6fn951e</td>\n",
              "      <td>2024-01-29 10:00:00+02:00</td>\n",
              "      <td>2024-01-29 10:45:00+02:00</td>\n",
              "      <td>2813</td>\n",
              "      <td>2024-01-29 10:49:04+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>758</th>\n",
              "      <td>Coaching Session_Group A_01</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>6pldgr6ol540akkvo4mc57p1ge</td>\n",
              "      <td>2024-01-31 10:00:00+02:00</td>\n",
              "      <td>2024-01-31 10:45:00+02:00</td>\n",
              "      <td>3224</td>\n",
              "      <td>2024-01-31 10:30:52+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>759</th>\n",
              "      <td>Coaching Session_Group A_01</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>hhqejk8h1ra7rabha03odfe6bs</td>\n",
              "      <td>2024-01-17 10:00:00+02:00</td>\n",
              "      <td>2024-01-17 10:45:00+02:00</td>\n",
              "      <td>2458</td>\n",
              "      <td>2024-01-17 10:41:42+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>924</th>\n",
              "      <td>Coaching Session__Group A_02</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>0kgpeogb8i2mjl0alfmc65pvf2</td>\n",
              "      <td>2024-01-24 11:00:00+02:00</td>\n",
              "      <td>2024-01-24 11:45:00+02:00</td>\n",
              "      <td>1816</td>\n",
              "      <td>2024-01-24 11:31:11+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>925</th>\n",
              "      <td>Coaching Session__Group A_02</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>15ovvumepsi63hdpl8mbr6pd79</td>\n",
              "      <td>2024-01-31 11:00:00+02:00</td>\n",
              "      <td>2024-01-31 11:45:00+02:00</td>\n",
              "      <td>2009</td>\n",
              "      <td>2024-01-31 11:35:34+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>926</th>\n",
              "      <td>Coaching Session__Group A_02</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>3kjf1spt5rmgvln18ifg0tajc0</td>\n",
              "      <td>2024-02-12 11:00:00+02:00</td>\n",
              "      <td>2024-02-12 11:45:00+02:00</td>\n",
              "      <td>2681</td>\n",
              "      <td>2024-02-12 11:48:46+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>927</th>\n",
              "      <td>Coaching Session__Group A_02</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>4mqb6vufmf43ffjr45v62j351d</td>\n",
              "      <td>2024-01-22 11:00:00+02:00</td>\n",
              "      <td>2024-01-22 11:45:00+02:00</td>\n",
              "      <td>2364</td>\n",
              "      <td>2024-01-22 11:41:14+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>928</th>\n",
              "      <td>Coaching Session__Group A_02</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>58gublb90d4ra3h5ft9074gbv8</td>\n",
              "      <td>2024-02-14 11:00:00+02:00</td>\n",
              "      <td>2024-02-14 11:45:00+02:00</td>\n",
              "      <td>2038</td>\n",
              "      <td>2024-02-14 11:35:59+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>929</th>\n",
              "      <td>Coaching Session__Group A_02</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>6g2galilsf7il1ff0qmvil6gvb</td>\n",
              "      <td>2024-01-17 11:00:00+02:00</td>\n",
              "      <td>2024-01-17 11:45:00+02:00</td>\n",
              "      <td>2181</td>\n",
              "      <td>2024-01-17 11:37:28+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>930</th>\n",
              "      <td>Coaching Session__Group A_02</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>6l2gdlra5bfj86gs1a3rb0jju1</td>\n",
              "      <td>2024-02-05 11:00:00+02:00</td>\n",
              "      <td>2024-02-05 11:45:00+02:00</td>\n",
              "      <td>2517</td>\n",
              "      <td>2024-02-05 11:44:15+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>931</th>\n",
              "      <td>Coaching Session__Group A_02</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>6u8f27i7bq4l26diim49769s8a</td>\n",
              "      <td>2024-01-29 11:00:00+02:00</td>\n",
              "      <td>2024-01-29 11:45:00+02:00</td>\n",
              "      <td>1931</td>\n",
              "      <td>2024-01-29 11:34:57+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>932</th>\n",
              "      <td>Coaching Session__Group A_02</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>6un6nids49raiq2jtqmnn9flfk</td>\n",
              "      <td>2024-02-19 11:00:00+02:00</td>\n",
              "      <td>2024-02-19 11:45:00+02:00</td>\n",
              "      <td>1765</td>\n",
              "      <td>2024-02-19 11:31:47+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>933</th>\n",
              "      <td>Coaching Session__Group A_02</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>7lb7vbpocoskrm3ggmo33ml4q4</td>\n",
              "      <td>2024-02-07 11:00:00+02:00</td>\n",
              "      <td>2024-02-07 11:45:00+02:00</td>\n",
              "      <td>2561</td>\n",
              "      <td>2024-02-07 11:48:08+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1101</th>\n",
              "      <td>Component Lecture - SDF11 Focus_Group A</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>4i6aeb4od0t5609ipmu1f3q3mr</td>\n",
              "      <td>2024-02-28 10:30:00+02:00</td>\n",
              "      <td>2024-02-28 11:30:00+02:00</td>\n",
              "      <td>1266</td>\n",
              "      <td>2024-02-28 10:53:58+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1144</th>\n",
              "      <td>Component Lecture 3️⃣_Group A</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>54tu3gdtnks9cng7jhubjfb7cj</td>\n",
              "      <td>2024-02-26 09:00:00+02:00</td>\n",
              "      <td>2024-02-26 10:00:00+02:00</td>\n",
              "      <td>3918</td>\n",
              "      <td>2024-02-26 09:50:10+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1175</th>\n",
              "      <td>Component Lecture 4️⃣__Group A</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>4hpg21h5j0npdoqqtlddeic7om</td>\n",
              "      <td>2024-02-26 10:30:00+02:00</td>\n",
              "      <td>2024-02-26 11:30:00+02:00</td>\n",
              "      <td>3217</td>\n",
              "      <td>2024-02-26 11:30:10+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1176</th>\n",
              "      <td>Component Lecture 5️⃣_Group A</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>7m5p3qutgjl0pdec6lo8426ru5</td>\n",
              "      <td>2024-02-28 09:00:00+02:00</td>\n",
              "      <td>2024-02-28 10:00:00+02:00</td>\n",
              "      <td>3506</td>\n",
              "      <td>2024-02-28 10:04:04+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1537</th>\n",
              "      <td>Group A_01 Coaching Session</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>2in6mai5r3208mgdii49rtu662_20240311T080000Z</td>\n",
              "      <td>2024-03-11 09:50:00+02:00</td>\n",
              "      <td>2024-03-11 10:50:00+02:00</td>\n",
              "      <td>3019</td>\n",
              "      <td>2024-03-11 10:44:39+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1538</th>\n",
              "      <td>Group A_01 Coaching Session</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>2in6mai5r3208mgdii49rtu662_20240313T080000Z</td>\n",
              "      <td>2024-03-13 10:00:00+02:00</td>\n",
              "      <td>2024-03-13 10:45:00+02:00</td>\n",
              "      <td>5318</td>\n",
              "      <td>2024-03-13 10:59:32+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1539</th>\n",
              "      <td>Group A_02 Coaching Session</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>0ojf2d6899bndslkp2q129l62q_20240311T090000Z</td>\n",
              "      <td>2024-03-11 11:00:00+02:00</td>\n",
              "      <td>2024-03-11 12:00:00+02:00</td>\n",
              "      <td>2353</td>\n",
              "      <td>2024-03-11 11:42:13+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1540</th>\n",
              "      <td>Group A_02 Coaching Session</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>0ojf2d6899bndslkp2q129l62q_20240313T090000Z</td>\n",
              "      <td>2024-03-13 11:00:00+02:00</td>\n",
              "      <td>2024-03-13 11:45:00+02:00</td>\n",
              "      <td>3030</td>\n",
              "      <td>2024-03-13 11:53:17+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3063</th>\n",
              "      <td>📝🧍🏽BCL: Coach X CTL X CC - Stand-up🧍🏽 📝</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>0vu2k3rvvl0kfupqvb4tvr1b06_20240131T070000Z</td>\n",
              "      <td>2024-01-31 09:00:00+02:00</td>\n",
              "      <td>2024-01-31 09:30:00+02:00</td>\n",
              "      <td>1475</td>\n",
              "      <td>2024-01-31 09:27:00+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3064</th>\n",
              "      <td>📝🧍🏽BCL: Coach X CTL X CC - Stand-up🧍🏽 📝</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>0vu2k3rvvl0kfupqvb4tvr1b06_20240313T070000Z</td>\n",
              "      <td>2024-03-13 09:00:00+02:00</td>\n",
              "      <td>2024-03-13 09:20:00+02:00</td>\n",
              "      <td>1831</td>\n",
              "      <td>2024-03-13 09:32:08+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3065</th>\n",
              "      <td>📝🧍🏽BCL: Coach X CTL X CC - Stand-up🧍🏽 📝</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>0vu2k3rvvl0kfupqvb4tvr1b06_20240320T070000Z</td>\n",
              "      <td>2024-03-20 09:00:00+02:00</td>\n",
              "      <td>2024-03-20 10:00:00+02:00</td>\n",
              "      <td>9760</td>\n",
              "      <td>2024-03-20 09:29:15+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3066</th>\n",
              "      <td>📝🧍🏽BCL: Coach X CTL X CC - Stand-up🧍🏽 📝</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>0vu2k3rvvl0kfupqvb4tvr1b06_20240327T070000Z</td>\n",
              "      <td>2024-03-27 09:00:00+02:00</td>\n",
              "      <td>2024-03-27 09:30:00+02:00</td>\n",
              "      <td>10165</td>\n",
              "      <td>2024-03-27 09:26:56+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3067</th>\n",
              "      <td>📝🧍🏽BCL: Coach X CTL X CC - Stand-up🧍🏽 📝</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>0vu2k3rvvl0kfupqvb4tvr1b06_20240403T070000Z</td>\n",
              "      <td>2024-04-03 09:00:00+02:00</td>\n",
              "      <td>2024-04-03 09:30:00+02:00</td>\n",
              "      <td>735</td>\n",
              "      <td>2024-04-03 09:13:31+02:00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-caf3916d-f382-41e7-9412-8bbce62c74eb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-caf3916d-f382-41e7-9412-8bbce62c74eb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-caf3916d-f382-41e7-9412-8bbce62c74eb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-20643167-8f49-46f5-92dc-812b2acbcb99\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-20643167-8f49-46f5-92dc-812b2acbcb99')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-20643167-8f49-46f5-92dc-812b2acbcb99 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "final_report_filtered",
              "summary": "{\n  \"name\": \"final_report_filtered\",\n  \"rows\": 33,\n  \"fields\": [\n    {\n      \"column\": \"Title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Group A_02 Coaching Session \",\n          \"Coaching Session__Group A_02\",\n          \"Component Lecture 5\\ufe0f\\u20e3_Group A\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"benjamin@codespace.co.za\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Calendar event ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 33,\n        \"samples\": [\n          \"0vu2k3rvvl0kfupqvb4tvr1b06_20240327T070000Z\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Start DateTime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-17 10:00:00+02:00\",\n        \"max\": \"2024-04-03 09:00:00+02:00\",\n        \"num_unique_values\": 33,\n        \"samples\": [\n          \"2024-03-27 09:00:00+02:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"End DateTime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-17 10:45:00+02:00\",\n        \"max\": \"2024-04-03 09:30:00+02:00\",\n        \"num_unique_values\": 33,\n        \"samples\": [\n          \"2024-03-27 09:30:00+02:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration (seconds)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1986,\n        \"min\": 735,\n        \"max\": 10165,\n        \"num_unique_values\": 33,\n        \"samples\": [\n          10165\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-17 10:41:42+02:00\",\n        \"max\": \"2024-04-03 09:13:31+02:00\",\n        \"num_unique_values\": 33,\n        \"samples\": [\n          \"2024-03-27 09:26:56+02:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 11
        }
      ],
      "source": [
        "# Filter final_report for 'david@codespace.co.za' in the 'Actor' column\n",
        "final_report_filtered = final_report[final_report['Actor'] == 'benjamin@codespace.co.za']\n",
        "final_report_filtered"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lBDd_nLgAfkR",
        "outputId": "77c2a1c3-000a-4b40-8a16-b90e52c68862"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2458 seconds is equal to 00:40:58.\n"
          ]
        }
      ],
      "source": [
        "#calculator\n",
        "\n",
        "total_seconds = 2458\n",
        "\n",
        "# Calculate hours, minutes and seconds\n",
        "hours, remainder = divmod(total_seconds, 3600)\n",
        "minutes, seconds = divmod(remainder, 60)\n",
        "\n",
        "# Format the result as HH:MM:SS\n",
        "time_str = \"{:02}:{:02}:{:02}\".format(int(hours), int(minutes), int(seconds))\n",
        "\n",
        "print(f\"{total_seconds} seconds is equal to {time_str}.\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "1Lhw3XZQAfkR"
      },
      "outputs": [],
      "source": [
        "# Rename 'Date' to 'Action time'\n",
        "final_report = final_report.rename(columns={'Date': 'Action time'})"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "jJVv8RX1AfkR"
      },
      "outputs": [],
      "source": [
        "final_report['Time Entered'] = np.nan\n",
        "final_report['Time Entered'] = final_report['Action time'] - pd.to_timedelta(final_report['Duration (seconds)'], unit='s')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "xioHlQlVAfkR",
        "outputId": "7bdc9ec8-c37f-481a-e2dd-19f84e87f889"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                  Title  \\\n",
              "0                                        1-on-1 Session   \n",
              "1                                        1-on-1 Session   \n",
              "2                         1-on-1 sessions (Angel Dinga)   \n",
              "3                         1-on-1 sessions (Angel Dinga)   \n",
              "4                        1-on-1 sessions (Chanel Brits)   \n",
              "...                                                 ...   \n",
              "3126                                    🗳️ Elections 🗳️   \n",
              "3127                                    🗳️ Elections 🗳️   \n",
              "3128               🚨DJS Finalisation: Kenneth and Jess    \n",
              "3129               🚨DJS Finalisation: Kenneth and Jess    \n",
              "3130  🥳🎉 Saajida's Birthday: Another Year Bites the ...   \n",
              "\n",
              "                        Actor           Calendar event ID  \\\n",
              "0      elzabe@codespace.co.za  7r5sh4o2cq6ehbiqvja059i8rn   \n",
              "1          nell9737@gmail.com  7r5sh4o2cq6ehbiqvja059i8rn   \n",
              "2       angelkdinga@gmail.com  gd1hhnu9t0muuhjr6mt8cnqf18   \n",
              "3      elzabe@codespace.co.za  gd1hhnu9t0muuhjr6mt8cnqf18   \n",
              "4      elzabe@codespace.co.za  uq77jo6ed2tf1f5icampsiaoac   \n",
              "...                       ...                         ...   \n",
              "3126     thvbojafta@gmail.com  1tmlh6mo3n3m6s9405hjrq6pdd   \n",
              "3127  wendyngcobo98@gmail.com  1tmlh6mo3n3m6s9405hjrq6pdd   \n",
              "3128     jess@codespace.co.za  5umrjfpa5iuog1togi4701hqff   \n",
              "3129  kenneth@codespace.co.za  5umrjfpa5iuog1togi4701hqff   \n",
              "3130  zachary@codespace.co.za  4ga0dm1u7o6pvouv0gkogcpu42   \n",
              "\n",
              "                Start DateTime              End DateTime  Duration (seconds)  \\\n",
              "0    2024-02-22 17:00:00+02:00 2024-02-22 17:15:00+02:00                 895   \n",
              "1    2024-02-22 17:00:00+02:00 2024-02-22 17:15:00+02:00                 961   \n",
              "2    2024-02-22 17:31:00+02:00 2024-02-22 17:46:00+02:00                 997   \n",
              "3    2024-02-22 17:31:00+02:00 2024-02-22 17:46:00+02:00                1001   \n",
              "4    2024-02-29 17:00:00+02:00 2024-02-29 17:15:00+02:00                 858   \n",
              "...                        ...                       ...                 ...   \n",
              "3126 2024-03-13 13:00:00+02:00 2024-03-13 13:45:00+02:00                2722   \n",
              "3127 2024-03-13 13:00:00+02:00 2024-03-13 13:45:00+02:00                2850   \n",
              "3128 2024-04-04 09:00:00+02:00 2024-04-04 16:30:00+02:00                2835   \n",
              "3129 2024-04-04 09:00:00+02:00 2024-04-04 16:30:00+02:00                3317   \n",
              "3130 2024-02-08 12:15:00+02:00 2024-02-08 13:00:00+02:00                 107   \n",
              "\n",
              "                   Action time              Time Entered  \n",
              "0    2024-02-22 17:16:18+02:00 2024-02-22 17:01:23+02:00  \n",
              "1    2024-02-22 17:16:18+02:00 2024-02-22 17:00:17+02:00  \n",
              "2    2024-02-22 17:46:58+02:00 2024-02-22 17:30:21+02:00  \n",
              "3    2024-02-22 17:46:58+02:00 2024-02-22 17:30:17+02:00  \n",
              "4    2024-02-29 17:14:33+02:00 2024-02-29 17:00:15+02:00  \n",
              "...                        ...                       ...  \n",
              "3126 2024-03-13 13:44:15+02:00 2024-03-13 12:58:53+02:00  \n",
              "3127 2024-03-13 13:44:26+02:00 2024-03-13 12:56:56+02:00  \n",
              "3128 2024-04-04 13:25:40+02:00 2024-04-04 12:38:25+02:00  \n",
              "3129 2024-04-04 13:25:41+02:00 2024-04-04 12:30:24+02:00  \n",
              "3130 2024-02-08 12:17:03+02:00 2024-02-08 12:15:16+02:00  \n",
              "\n",
              "[3131 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-392bd0c5-a6b1-4ebd-bfa9-c1ae1a9fe861\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Title</th>\n",
              "      <th>Actor</th>\n",
              "      <th>Calendar event ID</th>\n",
              "      <th>Start DateTime</th>\n",
              "      <th>End DateTime</th>\n",
              "      <th>Duration (seconds)</th>\n",
              "      <th>Action time</th>\n",
              "      <th>Time Entered</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1-on-1 Session</td>\n",
              "      <td>elzabe@codespace.co.za</td>\n",
              "      <td>7r5sh4o2cq6ehbiqvja059i8rn</td>\n",
              "      <td>2024-02-22 17:00:00+02:00</td>\n",
              "      <td>2024-02-22 17:15:00+02:00</td>\n",
              "      <td>895</td>\n",
              "      <td>2024-02-22 17:16:18+02:00</td>\n",
              "      <td>2024-02-22 17:01:23+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1-on-1 Session</td>\n",
              "      <td>nell9737@gmail.com</td>\n",
              "      <td>7r5sh4o2cq6ehbiqvja059i8rn</td>\n",
              "      <td>2024-02-22 17:00:00+02:00</td>\n",
              "      <td>2024-02-22 17:15:00+02:00</td>\n",
              "      <td>961</td>\n",
              "      <td>2024-02-22 17:16:18+02:00</td>\n",
              "      <td>2024-02-22 17:00:17+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1-on-1 sessions (Angel Dinga)</td>\n",
              "      <td>angelkdinga@gmail.com</td>\n",
              "      <td>gd1hhnu9t0muuhjr6mt8cnqf18</td>\n",
              "      <td>2024-02-22 17:31:00+02:00</td>\n",
              "      <td>2024-02-22 17:46:00+02:00</td>\n",
              "      <td>997</td>\n",
              "      <td>2024-02-22 17:46:58+02:00</td>\n",
              "      <td>2024-02-22 17:30:21+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1-on-1 sessions (Angel Dinga)</td>\n",
              "      <td>elzabe@codespace.co.za</td>\n",
              "      <td>gd1hhnu9t0muuhjr6mt8cnqf18</td>\n",
              "      <td>2024-02-22 17:31:00+02:00</td>\n",
              "      <td>2024-02-22 17:46:00+02:00</td>\n",
              "      <td>1001</td>\n",
              "      <td>2024-02-22 17:46:58+02:00</td>\n",
              "      <td>2024-02-22 17:30:17+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1-on-1 sessions (Chanel Brits)</td>\n",
              "      <td>elzabe@codespace.co.za</td>\n",
              "      <td>uq77jo6ed2tf1f5icampsiaoac</td>\n",
              "      <td>2024-02-29 17:00:00+02:00</td>\n",
              "      <td>2024-02-29 17:15:00+02:00</td>\n",
              "      <td>858</td>\n",
              "      <td>2024-02-29 17:14:33+02:00</td>\n",
              "      <td>2024-02-29 17:00:15+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3126</th>\n",
              "      <td>🗳️ Elections 🗳️</td>\n",
              "      <td>thvbojafta@gmail.com</td>\n",
              "      <td>1tmlh6mo3n3m6s9405hjrq6pdd</td>\n",
              "      <td>2024-03-13 13:00:00+02:00</td>\n",
              "      <td>2024-03-13 13:45:00+02:00</td>\n",
              "      <td>2722</td>\n",
              "      <td>2024-03-13 13:44:15+02:00</td>\n",
              "      <td>2024-03-13 12:58:53+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3127</th>\n",
              "      <td>🗳️ Elections 🗳️</td>\n",
              "      <td>wendyngcobo98@gmail.com</td>\n",
              "      <td>1tmlh6mo3n3m6s9405hjrq6pdd</td>\n",
              "      <td>2024-03-13 13:00:00+02:00</td>\n",
              "      <td>2024-03-13 13:45:00+02:00</td>\n",
              "      <td>2850</td>\n",
              "      <td>2024-03-13 13:44:26+02:00</td>\n",
              "      <td>2024-03-13 12:56:56+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3128</th>\n",
              "      <td>🚨DJS Finalisation: Kenneth and Jess</td>\n",
              "      <td>jess@codespace.co.za</td>\n",
              "      <td>5umrjfpa5iuog1togi4701hqff</td>\n",
              "      <td>2024-04-04 09:00:00+02:00</td>\n",
              "      <td>2024-04-04 16:30:00+02:00</td>\n",
              "      <td>2835</td>\n",
              "      <td>2024-04-04 13:25:40+02:00</td>\n",
              "      <td>2024-04-04 12:38:25+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3129</th>\n",
              "      <td>🚨DJS Finalisation: Kenneth and Jess</td>\n",
              "      <td>kenneth@codespace.co.za</td>\n",
              "      <td>5umrjfpa5iuog1togi4701hqff</td>\n",
              "      <td>2024-04-04 09:00:00+02:00</td>\n",
              "      <td>2024-04-04 16:30:00+02:00</td>\n",
              "      <td>3317</td>\n",
              "      <td>2024-04-04 13:25:41+02:00</td>\n",
              "      <td>2024-04-04 12:30:24+02:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3130</th>\n",
              "      <td>🥳🎉 Saajida's Birthday: Another Year Bites the ...</td>\n",
              "      <td>zachary@codespace.co.za</td>\n",
              "      <td>4ga0dm1u7o6pvouv0gkogcpu42</td>\n",
              "      <td>2024-02-08 12:15:00+02:00</td>\n",
              "      <td>2024-02-08 13:00:00+02:00</td>\n",
              "      <td>107</td>\n",
              "      <td>2024-02-08 12:17:03+02:00</td>\n",
              "      <td>2024-02-08 12:15:16+02:00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3131 rows × 8 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-392bd0c5-a6b1-4ebd-bfa9-c1ae1a9fe861')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-392bd0c5-a6b1-4ebd-bfa9-c1ae1a9fe861 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-392bd0c5-a6b1-4ebd-bfa9-c1ae1a9fe861');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e0e5ad91-d4a7-4ae4-b8fa-8f5888509720\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e0e5ad91-d4a7-4ae4-b8fa-8f5888509720')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e0e5ad91-d4a7-4ae4-b8fa-8f5888509720 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "final_report",
              "summary": "{\n  \"name\": \"final_report\",\n  \"rows\": 3131,\n  \"fields\": [\n    {\n      \"column\": \"Title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 305,\n        \"samples\": [\n          \"Ontiretse DWA session\",\n          \"Magic Sauce: Brainstorming Session\",\n          \"FTO2308 | DWA Part 2 |Coaching Group Session | Group A\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 223,\n        \"samples\": [\n          \"chemonique@codespace.co.za\",\n          \"deematshikiza@gmail.com\",\n          \"s.naphakade@gmail.com\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Calendar event ID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 751,\n        \"samples\": [\n          \"4i3hh4g23pb38m7pphcli7c5lp_20240130T150000Z\",\n          \"4akc290a8fu4q60colmsunf79o\",\n          \"2cvp0pheeskj9ei05a1c4vo8fe_20240327T070000Z\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Start DateTime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-05 09:30:00+02:00\",\n        \"max\": \"2024-04-04 13:00:00+02:00\",\n        \"num_unique_values\": 494,\n        \"samples\": [\n          \"2024-02-16 09:15:00+02:00\",\n          \"2024-02-26 09:00:00+02:00\",\n          \"2024-01-18 14:00:00+02:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"End DateTime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-05 10:30:00+02:00\",\n        \"max\": \"2024-04-04 16:30:00+02:00\",\n        \"num_unique_values\": 522,\n        \"samples\": [\n          \"2024-01-31 18:00:00+02:00\",\n          \"2024-03-12 19:00:00+02:00\",\n          \"2024-02-22 18:02:00+02:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration (seconds)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1873,\n        \"min\": 5,\n        \"max\": 12868,\n        \"num_unique_values\": 2344,\n        \"samples\": [\n          628,\n          5114,\n          5317\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Action time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-05 10:24:37+02:00\",\n        \"max\": \"2024-04-04 13:59:11+02:00\",\n        \"num_unique_values\": 2474,\n        \"samples\": [\n          \"2024-02-26 11:52:34+02:00\",\n          \"2024-03-15 15:33:35+02:00\",\n          \"2024-02-22 13:31:27+02:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Time Entered\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-05 09:27:30+02:00\",\n        \"max\": \"2024-04-04 13:15:41+02:00\",\n        \"num_unique_values\": 3092,\n        \"samples\": [\n          \"2024-01-29 10:08:36+02:00\",\n          \"2024-02-29 14:29:02+02:00\",\n          \"2024-02-15 09:55:46+02:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 15
        }
      ],
      "source": [
        "final_report"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "gwziJc31AfkR"
      },
      "outputs": [],
      "source": [
        "# Convert 'Duration (seconds)' to numeric, replace non-numeric values with 0\n",
        "final_report.loc[:, 'Duration (seconds)'] = pd.to_numeric(final_report['Duration (seconds)'], errors='coerce').fillna(0)\n",
        "\n",
        "# Calculate hours, minutes, and seconds\n",
        "hours = final_report['Duration (seconds)'] // 3600\n",
        "remainder = final_report['Duration (seconds)'] % 3600\n",
        "minutes = remainder // 60\n",
        "seconds = remainder % 60\n",
        "\n",
        "# Create a new column 'Duration' to show the duration in hours, minutes, and seconds\n",
        "final_report.loc[:, 'Duration'] = hours.astype(int).astype(str) + \":\" + minutes.astype(int).astype(str).str.zfill(2) + \":\" + seconds.astype(int).astype(str).str.zfill(2)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "NPdRQIhxAfkR"
      },
      "outputs": [],
      "source": [
        "# Convert 'Start DateTime' to timezone aware datetime if it's not\n",
        "if final_report['Start DateTime'].dt.tz is None:\n",
        "    final_report['Start DateTime'] = final_report['Start DateTime'].dt.tz_localize('UTC')\n",
        "\n",
        "# Calculate the lateness as 'Time Entered' - 'Start DateTime'\n",
        "lateness = (final_report['Time Entered'].dt.tz_localize(None) - final_report['Start DateTime'].dt.tz_localize(None)).dt.total_seconds()\n",
        "\n",
        "# Replace negative durations with 0\n",
        "lateness = lateness.clip(lower=0)\n",
        "\n",
        "# Calculate hours, minutes, and seconds\n",
        "hours, remainder = divmod(lateness, 3600)\n",
        "minutes, seconds = divmod(remainder, 60)\n",
        "\n",
        "# Create a new column 'Lateness (min:sec)' to show how late each participant was\n",
        "final_report['Lateness (min:sec)'] = hours.astype(int).astype(str).str.zfill(2) + \":\" + minutes.astype(int).astype(str).str.zfill(2) + \":\" + seconds.astype(int).astype(str).str.zfill(2)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "w57wkvjuAfkR"
      },
      "outputs": [],
      "source": [
        "final_report['Start DateTime'] = final_report['Start DateTime'].dt.tz_localize(None)\n",
        "final_report['Action time'] = final_report['Action time'].dt.tz_localize(None)\n",
        "final_report['Time Entered'] = final_report['Time Entered'].dt.tz_localize(None)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "joasYW3nAfkR",
        "outputId": "502ce73f-ed03-445d-b6a7-119915b236b0"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                        Title                     Actor  \\\n",
              "750               Coaching Session_Group A_01  benjamin@codespace.co.za   \n",
              "751               Coaching Session_Group A_01  benjamin@codespace.co.za   \n",
              "752               Coaching Session_Group A_01  benjamin@codespace.co.za   \n",
              "753               Coaching Session_Group A_01  benjamin@codespace.co.za   \n",
              "754               Coaching Session_Group A_01  benjamin@codespace.co.za   \n",
              "755               Coaching Session_Group A_01  benjamin@codespace.co.za   \n",
              "756               Coaching Session_Group A_01  benjamin@codespace.co.za   \n",
              "757               Coaching Session_Group A_01  benjamin@codespace.co.za   \n",
              "758               Coaching Session_Group A_01  benjamin@codespace.co.za   \n",
              "759               Coaching Session_Group A_01  benjamin@codespace.co.za   \n",
              "924              Coaching Session__Group A_02  benjamin@codespace.co.za   \n",
              "925              Coaching Session__Group A_02  benjamin@codespace.co.za   \n",
              "926              Coaching Session__Group A_02  benjamin@codespace.co.za   \n",
              "927              Coaching Session__Group A_02  benjamin@codespace.co.za   \n",
              "928              Coaching Session__Group A_02  benjamin@codespace.co.za   \n",
              "929              Coaching Session__Group A_02  benjamin@codespace.co.za   \n",
              "930              Coaching Session__Group A_02  benjamin@codespace.co.za   \n",
              "931              Coaching Session__Group A_02  benjamin@codespace.co.za   \n",
              "932              Coaching Session__Group A_02  benjamin@codespace.co.za   \n",
              "933              Coaching Session__Group A_02  benjamin@codespace.co.za   \n",
              "1101  Component Lecture - SDF11 Focus_Group A  benjamin@codespace.co.za   \n",
              "1144            Component Lecture 3️⃣_Group A  benjamin@codespace.co.za   \n",
              "1175           Component Lecture 4️⃣__Group A  benjamin@codespace.co.za   \n",
              "1176            Component Lecture 5️⃣_Group A  benjamin@codespace.co.za   \n",
              "1537             Group A_01 Coaching Session   benjamin@codespace.co.za   \n",
              "1538             Group A_01 Coaching Session   benjamin@codespace.co.za   \n",
              "1539             Group A_02 Coaching Session   benjamin@codespace.co.za   \n",
              "1540             Group A_02 Coaching Session   benjamin@codespace.co.za   \n",
              "3063  📝🧍🏽BCL: Coach X CTL X CC - Stand-up🧍🏽 📝  benjamin@codespace.co.za   \n",
              "3064  📝🧍🏽BCL: Coach X CTL X CC - Stand-up🧍🏽 📝  benjamin@codespace.co.za   \n",
              "3065  📝🧍🏽BCL: Coach X CTL X CC - Stand-up🧍🏽 📝  benjamin@codespace.co.za   \n",
              "3066  📝🧍🏽BCL: Coach X CTL X CC - Stand-up🧍🏽 📝  benjamin@codespace.co.za   \n",
              "3067  📝🧍🏽BCL: Coach X CTL X CC - Stand-up🧍🏽 📝  benjamin@codespace.co.za   \n",
              "\n",
              "                                Calendar event ID      Start DateTime  \\\n",
              "750                    1calgal6j1sdo3cumjhslm481b 2024-02-19 10:00:00   \n",
              "751                    1niat47688pqpotpin3b3vgb36 2024-02-12 10:00:00   \n",
              "752                    2nmtv55hl3lh3t87kfnpcvhbvg 2024-02-14 10:00:00   \n",
              "753                    3vm80eh82djkmhrh556pipuqji 2024-01-22 10:00:00   \n",
              "754                    497h9hc4b941dc3ph9pcjrshg4 2024-01-24 10:00:00   \n",
              "755                    4ukt0j4o12kiadlffd3hg76v0n 2024-02-05 10:00:00   \n",
              "756                    5e594e7jot2087a7nkpi4dhc0b 2024-02-07 10:00:00   \n",
              "757                    6eg02ojih1ovhoo0nmj6fn951e 2024-01-29 10:00:00   \n",
              "758                    6pldgr6ol540akkvo4mc57p1ge 2024-01-31 10:00:00   \n",
              "759                    hhqejk8h1ra7rabha03odfe6bs 2024-01-17 10:00:00   \n",
              "924                    0kgpeogb8i2mjl0alfmc65pvf2 2024-01-24 11:00:00   \n",
              "925                    15ovvumepsi63hdpl8mbr6pd79 2024-01-31 11:00:00   \n",
              "926                    3kjf1spt5rmgvln18ifg0tajc0 2024-02-12 11:00:00   \n",
              "927                    4mqb6vufmf43ffjr45v62j351d 2024-01-22 11:00:00   \n",
              "928                    58gublb90d4ra3h5ft9074gbv8 2024-02-14 11:00:00   \n",
              "929                    6g2galilsf7il1ff0qmvil6gvb 2024-01-17 11:00:00   \n",
              "930                    6l2gdlra5bfj86gs1a3rb0jju1 2024-02-05 11:00:00   \n",
              "931                    6u8f27i7bq4l26diim49769s8a 2024-01-29 11:00:00   \n",
              "932                    6un6nids49raiq2jtqmnn9flfk 2024-02-19 11:00:00   \n",
              "933                    7lb7vbpocoskrm3ggmo33ml4q4 2024-02-07 11:00:00   \n",
              "1101                   4i6aeb4od0t5609ipmu1f3q3mr 2024-02-28 10:30:00   \n",
              "1144                   54tu3gdtnks9cng7jhubjfb7cj 2024-02-26 09:00:00   \n",
              "1175                   4hpg21h5j0npdoqqtlddeic7om 2024-02-26 10:30:00   \n",
              "1176                   7m5p3qutgjl0pdec6lo8426ru5 2024-02-28 09:00:00   \n",
              "1537  2in6mai5r3208mgdii49rtu662_20240311T080000Z 2024-03-11 09:50:00   \n",
              "1538  2in6mai5r3208mgdii49rtu662_20240313T080000Z 2024-03-13 10:00:00   \n",
              "1539  0ojf2d6899bndslkp2q129l62q_20240311T090000Z 2024-03-11 11:00:00   \n",
              "1540  0ojf2d6899bndslkp2q129l62q_20240313T090000Z 2024-03-13 11:00:00   \n",
              "3063  0vu2k3rvvl0kfupqvb4tvr1b06_20240131T070000Z 2024-01-31 09:00:00   \n",
              "3064  0vu2k3rvvl0kfupqvb4tvr1b06_20240313T070000Z 2024-03-13 09:00:00   \n",
              "3065  0vu2k3rvvl0kfupqvb4tvr1b06_20240320T070000Z 2024-03-20 09:00:00   \n",
              "3066  0vu2k3rvvl0kfupqvb4tvr1b06_20240327T070000Z 2024-03-27 09:00:00   \n",
              "3067  0vu2k3rvvl0kfupqvb4tvr1b06_20240403T070000Z 2024-04-03 09:00:00   \n",
              "\n",
              "                  End DateTime  Duration (seconds)         Action time  \\\n",
              "750  2024-02-19 10:45:00+02:00                2818 2024-02-19 10:50:04   \n",
              "751  2024-02-12 10:45:00+02:00                3427 2024-02-12 10:59:24   \n",
              "752  2024-02-14 10:45:00+02:00                2535 2024-02-14 10:43:55   \n",
              "753  2024-01-22 10:45:00+02:00                3049 2024-01-22 10:51:24   \n",
              "754  2024-01-24 10:45:00+02:00                1660 2024-01-24 10:28:43   \n",
              "755  2024-02-05 10:45:00+02:00                3300 2024-02-05 10:55:42   \n",
              "756  2024-02-07 10:45:00+02:00                2545 2024-02-07 10:45:07   \n",
              "757  2024-01-29 10:45:00+02:00                2813 2024-01-29 10:49:04   \n",
              "758  2024-01-31 10:45:00+02:00                3224 2024-01-31 10:30:52   \n",
              "759  2024-01-17 10:45:00+02:00                2458 2024-01-17 10:41:42   \n",
              "924  2024-01-24 11:45:00+02:00                1816 2024-01-24 11:31:11   \n",
              "925  2024-01-31 11:45:00+02:00                2009 2024-01-31 11:35:34   \n",
              "926  2024-02-12 11:45:00+02:00                2681 2024-02-12 11:48:46   \n",
              "927  2024-01-22 11:45:00+02:00                2364 2024-01-22 11:41:14   \n",
              "928  2024-02-14 11:45:00+02:00                2038 2024-02-14 11:35:59   \n",
              "929  2024-01-17 11:45:00+02:00                2181 2024-01-17 11:37:28   \n",
              "930  2024-02-05 11:45:00+02:00                2517 2024-02-05 11:44:15   \n",
              "931  2024-01-29 11:45:00+02:00                1931 2024-01-29 11:34:57   \n",
              "932  2024-02-19 11:45:00+02:00                1765 2024-02-19 11:31:47   \n",
              "933  2024-02-07 11:45:00+02:00                2561 2024-02-07 11:48:08   \n",
              "1101 2024-02-28 11:30:00+02:00                1266 2024-02-28 10:53:58   \n",
              "1144 2024-02-26 10:00:00+02:00                3918 2024-02-26 09:50:10   \n",
              "1175 2024-02-26 11:30:00+02:00                3217 2024-02-26 11:30:10   \n",
              "1176 2024-02-28 10:00:00+02:00                3506 2024-02-28 10:04:04   \n",
              "1537 2024-03-11 10:50:00+02:00                3019 2024-03-11 10:44:39   \n",
              "1538 2024-03-13 10:45:00+02:00                5318 2024-03-13 10:59:32   \n",
              "1539 2024-03-11 12:00:00+02:00                2353 2024-03-11 11:42:13   \n",
              "1540 2024-03-13 11:45:00+02:00                3030 2024-03-13 11:53:17   \n",
              "3063 2024-01-31 09:30:00+02:00                1475 2024-01-31 09:27:00   \n",
              "3064 2024-03-13 09:20:00+02:00                1831 2024-03-13 09:32:08   \n",
              "3065 2024-03-20 10:00:00+02:00                9760 2024-03-20 09:29:15   \n",
              "3066 2024-03-27 09:30:00+02:00               10165 2024-03-27 09:26:56   \n",
              "3067 2024-04-03 09:30:00+02:00                 735 2024-04-03 09:13:31   \n",
              "\n",
              "            Time Entered Duration Lateness (min:sec)  \n",
              "750  2024-02-19 10:03:06  0:46:58           00:03:06  \n",
              "751  2024-02-12 10:02:17  0:57:07           00:02:17  \n",
              "752  2024-02-14 10:01:40  0:42:15           00:01:40  \n",
              "753  2024-01-22 10:00:35  0:50:49           00:00:35  \n",
              "754  2024-01-24 10:01:03  0:27:40           00:01:03  \n",
              "755  2024-02-05 10:00:42  0:55:00           00:00:42  \n",
              "756  2024-02-07 10:02:42  0:42:25           00:02:42  \n",
              "757  2024-01-29 10:02:11  0:46:53           00:02:11  \n",
              "758  2024-01-31 09:37:08  0:53:44           00:00:00  \n",
              "759  2024-01-17 10:00:44  0:40:58           00:00:44  \n",
              "924  2024-01-24 11:00:55  0:30:16           00:00:55  \n",
              "925  2024-01-31 11:02:05  0:33:29           00:02:05  \n",
              "926  2024-02-12 11:04:05  0:44:41           00:04:05  \n",
              "927  2024-01-22 11:01:50  0:39:24           00:01:50  \n",
              "928  2024-02-14 11:02:01  0:33:58           00:02:01  \n",
              "929  2024-01-17 11:01:07  0:36:21           00:01:07  \n",
              "930  2024-02-05 11:02:18  0:41:57           00:02:18  \n",
              "931  2024-01-29 11:02:46  0:32:11           00:02:46  \n",
              "932  2024-02-19 11:02:22  0:29:25           00:02:22  \n",
              "933  2024-02-07 11:05:27  0:42:41           00:05:27  \n",
              "1101 2024-02-28 10:32:52  0:21:06           00:02:52  \n",
              "1144 2024-02-26 08:44:52  1:05:18           00:00:00  \n",
              "1175 2024-02-26 10:36:33  0:53:37           00:06:33  \n",
              "1176 2024-02-28 09:05:38  0:58:26           00:05:38  \n",
              "1537 2024-03-11 09:54:20  0:50:19           00:04:20  \n",
              "1538 2024-03-13 09:30:54  1:28:38           00:00:00  \n",
              "1539 2024-03-11 11:03:00  0:39:13           00:03:00  \n",
              "1540 2024-03-13 11:02:47  0:50:30           00:02:47  \n",
              "3063 2024-01-31 09:02:25  0:24:35           00:02:25  \n",
              "3064 2024-03-13 09:01:37  0:30:31           00:01:37  \n",
              "3065 2024-03-20 06:46:35  2:42:40           00:00:00  \n",
              "3066 2024-03-27 06:37:31  2:49:25           00:00:00  \n",
              "3067 2024-04-03 09:01:16  0:12:15           00:01:16  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-16b5f656-3e4d-4dc2-85b0-f51fe09a5671\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Title</th>\n",
              "      <th>Actor</th>\n",
              "      <th>Calendar event ID</th>\n",
              "      <th>Start DateTime</th>\n",
              "      <th>End DateTime</th>\n",
              "      <th>Duration (seconds)</th>\n",
              "      <th>Action time</th>\n",
              "      <th>Time Entered</th>\n",
              "      <th>Duration</th>\n",
              "      <th>Lateness (min:sec)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>750</th>\n",
              "      <td>Coaching Session_Group A_01</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>1calgal6j1sdo3cumjhslm481b</td>\n",
              "      <td>2024-02-19 10:00:00</td>\n",
              "      <td>2024-02-19 10:45:00+02:00</td>\n",
              "      <td>2818</td>\n",
              "      <td>2024-02-19 10:50:04</td>\n",
              "      <td>2024-02-19 10:03:06</td>\n",
              "      <td>0:46:58</td>\n",
              "      <td>00:03:06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>751</th>\n",
              "      <td>Coaching Session_Group A_01</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>1niat47688pqpotpin3b3vgb36</td>\n",
              "      <td>2024-02-12 10:00:00</td>\n",
              "      <td>2024-02-12 10:45:00+02:00</td>\n",
              "      <td>3427</td>\n",
              "      <td>2024-02-12 10:59:24</td>\n",
              "      <td>2024-02-12 10:02:17</td>\n",
              "      <td>0:57:07</td>\n",
              "      <td>00:02:17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>752</th>\n",
              "      <td>Coaching Session_Group A_01</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>2nmtv55hl3lh3t87kfnpcvhbvg</td>\n",
              "      <td>2024-02-14 10:00:00</td>\n",
              "      <td>2024-02-14 10:45:00+02:00</td>\n",
              "      <td>2535</td>\n",
              "      <td>2024-02-14 10:43:55</td>\n",
              "      <td>2024-02-14 10:01:40</td>\n",
              "      <td>0:42:15</td>\n",
              "      <td>00:01:40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>753</th>\n",
              "      <td>Coaching Session_Group A_01</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>3vm80eh82djkmhrh556pipuqji</td>\n",
              "      <td>2024-01-22 10:00:00</td>\n",
              "      <td>2024-01-22 10:45:00+02:00</td>\n",
              "      <td>3049</td>\n",
              "      <td>2024-01-22 10:51:24</td>\n",
              "      <td>2024-01-22 10:00:35</td>\n",
              "      <td>0:50:49</td>\n",
              "      <td>00:00:35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>754</th>\n",
              "      <td>Coaching Session_Group A_01</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>497h9hc4b941dc3ph9pcjrshg4</td>\n",
              "      <td>2024-01-24 10:00:00</td>\n",
              "      <td>2024-01-24 10:45:00+02:00</td>\n",
              "      <td>1660</td>\n",
              "      <td>2024-01-24 10:28:43</td>\n",
              "      <td>2024-01-24 10:01:03</td>\n",
              "      <td>0:27:40</td>\n",
              "      <td>00:01:03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>755</th>\n",
              "      <td>Coaching Session_Group A_01</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>4ukt0j4o12kiadlffd3hg76v0n</td>\n",
              "      <td>2024-02-05 10:00:00</td>\n",
              "      <td>2024-02-05 10:45:00+02:00</td>\n",
              "      <td>3300</td>\n",
              "      <td>2024-02-05 10:55:42</td>\n",
              "      <td>2024-02-05 10:00:42</td>\n",
              "      <td>0:55:00</td>\n",
              "      <td>00:00:42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>756</th>\n",
              "      <td>Coaching Session_Group A_01</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>5e594e7jot2087a7nkpi4dhc0b</td>\n",
              "      <td>2024-02-07 10:00:00</td>\n",
              "      <td>2024-02-07 10:45:00+02:00</td>\n",
              "      <td>2545</td>\n",
              "      <td>2024-02-07 10:45:07</td>\n",
              "      <td>2024-02-07 10:02:42</td>\n",
              "      <td>0:42:25</td>\n",
              "      <td>00:02:42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>757</th>\n",
              "      <td>Coaching Session_Group A_01</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>6eg02ojih1ovhoo0nmj6fn951e</td>\n",
              "      <td>2024-01-29 10:00:00</td>\n",
              "      <td>2024-01-29 10:45:00+02:00</td>\n",
              "      <td>2813</td>\n",
              "      <td>2024-01-29 10:49:04</td>\n",
              "      <td>2024-01-29 10:02:11</td>\n",
              "      <td>0:46:53</td>\n",
              "      <td>00:02:11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>758</th>\n",
              "      <td>Coaching Session_Group A_01</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>6pldgr6ol540akkvo4mc57p1ge</td>\n",
              "      <td>2024-01-31 10:00:00</td>\n",
              "      <td>2024-01-31 10:45:00+02:00</td>\n",
              "      <td>3224</td>\n",
              "      <td>2024-01-31 10:30:52</td>\n",
              "      <td>2024-01-31 09:37:08</td>\n",
              "      <td>0:53:44</td>\n",
              "      <td>00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>759</th>\n",
              "      <td>Coaching Session_Group A_01</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>hhqejk8h1ra7rabha03odfe6bs</td>\n",
              "      <td>2024-01-17 10:00:00</td>\n",
              "      <td>2024-01-17 10:45:00+02:00</td>\n",
              "      <td>2458</td>\n",
              "      <td>2024-01-17 10:41:42</td>\n",
              "      <td>2024-01-17 10:00:44</td>\n",
              "      <td>0:40:58</td>\n",
              "      <td>00:00:44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>924</th>\n",
              "      <td>Coaching Session__Group A_02</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>0kgpeogb8i2mjl0alfmc65pvf2</td>\n",
              "      <td>2024-01-24 11:00:00</td>\n",
              "      <td>2024-01-24 11:45:00+02:00</td>\n",
              "      <td>1816</td>\n",
              "      <td>2024-01-24 11:31:11</td>\n",
              "      <td>2024-01-24 11:00:55</td>\n",
              "      <td>0:30:16</td>\n",
              "      <td>00:00:55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>925</th>\n",
              "      <td>Coaching Session__Group A_02</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>15ovvumepsi63hdpl8mbr6pd79</td>\n",
              "      <td>2024-01-31 11:00:00</td>\n",
              "      <td>2024-01-31 11:45:00+02:00</td>\n",
              "      <td>2009</td>\n",
              "      <td>2024-01-31 11:35:34</td>\n",
              "      <td>2024-01-31 11:02:05</td>\n",
              "      <td>0:33:29</td>\n",
              "      <td>00:02:05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>926</th>\n",
              "      <td>Coaching Session__Group A_02</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>3kjf1spt5rmgvln18ifg0tajc0</td>\n",
              "      <td>2024-02-12 11:00:00</td>\n",
              "      <td>2024-02-12 11:45:00+02:00</td>\n",
              "      <td>2681</td>\n",
              "      <td>2024-02-12 11:48:46</td>\n",
              "      <td>2024-02-12 11:04:05</td>\n",
              "      <td>0:44:41</td>\n",
              "      <td>00:04:05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>927</th>\n",
              "      <td>Coaching Session__Group A_02</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>4mqb6vufmf43ffjr45v62j351d</td>\n",
              "      <td>2024-01-22 11:00:00</td>\n",
              "      <td>2024-01-22 11:45:00+02:00</td>\n",
              "      <td>2364</td>\n",
              "      <td>2024-01-22 11:41:14</td>\n",
              "      <td>2024-01-22 11:01:50</td>\n",
              "      <td>0:39:24</td>\n",
              "      <td>00:01:50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>928</th>\n",
              "      <td>Coaching Session__Group A_02</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>58gublb90d4ra3h5ft9074gbv8</td>\n",
              "      <td>2024-02-14 11:00:00</td>\n",
              "      <td>2024-02-14 11:45:00+02:00</td>\n",
              "      <td>2038</td>\n",
              "      <td>2024-02-14 11:35:59</td>\n",
              "      <td>2024-02-14 11:02:01</td>\n",
              "      <td>0:33:58</td>\n",
              "      <td>00:02:01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>929</th>\n",
              "      <td>Coaching Session__Group A_02</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>6g2galilsf7il1ff0qmvil6gvb</td>\n",
              "      <td>2024-01-17 11:00:00</td>\n",
              "      <td>2024-01-17 11:45:00+02:00</td>\n",
              "      <td>2181</td>\n",
              "      <td>2024-01-17 11:37:28</td>\n",
              "      <td>2024-01-17 11:01:07</td>\n",
              "      <td>0:36:21</td>\n",
              "      <td>00:01:07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>930</th>\n",
              "      <td>Coaching Session__Group A_02</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>6l2gdlra5bfj86gs1a3rb0jju1</td>\n",
              "      <td>2024-02-05 11:00:00</td>\n",
              "      <td>2024-02-05 11:45:00+02:00</td>\n",
              "      <td>2517</td>\n",
              "      <td>2024-02-05 11:44:15</td>\n",
              "      <td>2024-02-05 11:02:18</td>\n",
              "      <td>0:41:57</td>\n",
              "      <td>00:02:18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>931</th>\n",
              "      <td>Coaching Session__Group A_02</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>6u8f27i7bq4l26diim49769s8a</td>\n",
              "      <td>2024-01-29 11:00:00</td>\n",
              "      <td>2024-01-29 11:45:00+02:00</td>\n",
              "      <td>1931</td>\n",
              "      <td>2024-01-29 11:34:57</td>\n",
              "      <td>2024-01-29 11:02:46</td>\n",
              "      <td>0:32:11</td>\n",
              "      <td>00:02:46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>932</th>\n",
              "      <td>Coaching Session__Group A_02</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>6un6nids49raiq2jtqmnn9flfk</td>\n",
              "      <td>2024-02-19 11:00:00</td>\n",
              "      <td>2024-02-19 11:45:00+02:00</td>\n",
              "      <td>1765</td>\n",
              "      <td>2024-02-19 11:31:47</td>\n",
              "      <td>2024-02-19 11:02:22</td>\n",
              "      <td>0:29:25</td>\n",
              "      <td>00:02:22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>933</th>\n",
              "      <td>Coaching Session__Group A_02</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>7lb7vbpocoskrm3ggmo33ml4q4</td>\n",
              "      <td>2024-02-07 11:00:00</td>\n",
              "      <td>2024-02-07 11:45:00+02:00</td>\n",
              "      <td>2561</td>\n",
              "      <td>2024-02-07 11:48:08</td>\n",
              "      <td>2024-02-07 11:05:27</td>\n",
              "      <td>0:42:41</td>\n",
              "      <td>00:05:27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1101</th>\n",
              "      <td>Component Lecture - SDF11 Focus_Group A</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>4i6aeb4od0t5609ipmu1f3q3mr</td>\n",
              "      <td>2024-02-28 10:30:00</td>\n",
              "      <td>2024-02-28 11:30:00+02:00</td>\n",
              "      <td>1266</td>\n",
              "      <td>2024-02-28 10:53:58</td>\n",
              "      <td>2024-02-28 10:32:52</td>\n",
              "      <td>0:21:06</td>\n",
              "      <td>00:02:52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1144</th>\n",
              "      <td>Component Lecture 3️⃣_Group A</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>54tu3gdtnks9cng7jhubjfb7cj</td>\n",
              "      <td>2024-02-26 09:00:00</td>\n",
              "      <td>2024-02-26 10:00:00+02:00</td>\n",
              "      <td>3918</td>\n",
              "      <td>2024-02-26 09:50:10</td>\n",
              "      <td>2024-02-26 08:44:52</td>\n",
              "      <td>1:05:18</td>\n",
              "      <td>00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1175</th>\n",
              "      <td>Component Lecture 4️⃣__Group A</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>4hpg21h5j0npdoqqtlddeic7om</td>\n",
              "      <td>2024-02-26 10:30:00</td>\n",
              "      <td>2024-02-26 11:30:00+02:00</td>\n",
              "      <td>3217</td>\n",
              "      <td>2024-02-26 11:30:10</td>\n",
              "      <td>2024-02-26 10:36:33</td>\n",
              "      <td>0:53:37</td>\n",
              "      <td>00:06:33</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1176</th>\n",
              "      <td>Component Lecture 5️⃣_Group A</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>7m5p3qutgjl0pdec6lo8426ru5</td>\n",
              "      <td>2024-02-28 09:00:00</td>\n",
              "      <td>2024-02-28 10:00:00+02:00</td>\n",
              "      <td>3506</td>\n",
              "      <td>2024-02-28 10:04:04</td>\n",
              "      <td>2024-02-28 09:05:38</td>\n",
              "      <td>0:58:26</td>\n",
              "      <td>00:05:38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1537</th>\n",
              "      <td>Group A_01 Coaching Session</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>2in6mai5r3208mgdii49rtu662_20240311T080000Z</td>\n",
              "      <td>2024-03-11 09:50:00</td>\n",
              "      <td>2024-03-11 10:50:00+02:00</td>\n",
              "      <td>3019</td>\n",
              "      <td>2024-03-11 10:44:39</td>\n",
              "      <td>2024-03-11 09:54:20</td>\n",
              "      <td>0:50:19</td>\n",
              "      <td>00:04:20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1538</th>\n",
              "      <td>Group A_01 Coaching Session</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>2in6mai5r3208mgdii49rtu662_20240313T080000Z</td>\n",
              "      <td>2024-03-13 10:00:00</td>\n",
              "      <td>2024-03-13 10:45:00+02:00</td>\n",
              "      <td>5318</td>\n",
              "      <td>2024-03-13 10:59:32</td>\n",
              "      <td>2024-03-13 09:30:54</td>\n",
              "      <td>1:28:38</td>\n",
              "      <td>00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1539</th>\n",
              "      <td>Group A_02 Coaching Session</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>0ojf2d6899bndslkp2q129l62q_20240311T090000Z</td>\n",
              "      <td>2024-03-11 11:00:00</td>\n",
              "      <td>2024-03-11 12:00:00+02:00</td>\n",
              "      <td>2353</td>\n",
              "      <td>2024-03-11 11:42:13</td>\n",
              "      <td>2024-03-11 11:03:00</td>\n",
              "      <td>0:39:13</td>\n",
              "      <td>00:03:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1540</th>\n",
              "      <td>Group A_02 Coaching Session</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>0ojf2d6899bndslkp2q129l62q_20240313T090000Z</td>\n",
              "      <td>2024-03-13 11:00:00</td>\n",
              "      <td>2024-03-13 11:45:00+02:00</td>\n",
              "      <td>3030</td>\n",
              "      <td>2024-03-13 11:53:17</td>\n",
              "      <td>2024-03-13 11:02:47</td>\n",
              "      <td>0:50:30</td>\n",
              "      <td>00:02:47</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3063</th>\n",
              "      <td>📝🧍🏽BCL: Coach X CTL X CC - Stand-up🧍🏽 📝</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>0vu2k3rvvl0kfupqvb4tvr1b06_20240131T070000Z</td>\n",
              "      <td>2024-01-31 09:00:00</td>\n",
              "      <td>2024-01-31 09:30:00+02:00</td>\n",
              "      <td>1475</td>\n",
              "      <td>2024-01-31 09:27:00</td>\n",
              "      <td>2024-01-31 09:02:25</td>\n",
              "      <td>0:24:35</td>\n",
              "      <td>00:02:25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3064</th>\n",
              "      <td>📝🧍🏽BCL: Coach X CTL X CC - Stand-up🧍🏽 📝</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>0vu2k3rvvl0kfupqvb4tvr1b06_20240313T070000Z</td>\n",
              "      <td>2024-03-13 09:00:00</td>\n",
              "      <td>2024-03-13 09:20:00+02:00</td>\n",
              "      <td>1831</td>\n",
              "      <td>2024-03-13 09:32:08</td>\n",
              "      <td>2024-03-13 09:01:37</td>\n",
              "      <td>0:30:31</td>\n",
              "      <td>00:01:37</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3065</th>\n",
              "      <td>📝🧍🏽BCL: Coach X CTL X CC - Stand-up🧍🏽 📝</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>0vu2k3rvvl0kfupqvb4tvr1b06_20240320T070000Z</td>\n",
              "      <td>2024-03-20 09:00:00</td>\n",
              "      <td>2024-03-20 10:00:00+02:00</td>\n",
              "      <td>9760</td>\n",
              "      <td>2024-03-20 09:29:15</td>\n",
              "      <td>2024-03-20 06:46:35</td>\n",
              "      <td>2:42:40</td>\n",
              "      <td>00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3066</th>\n",
              "      <td>📝🧍🏽BCL: Coach X CTL X CC - Stand-up🧍🏽 📝</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>0vu2k3rvvl0kfupqvb4tvr1b06_20240327T070000Z</td>\n",
              "      <td>2024-03-27 09:00:00</td>\n",
              "      <td>2024-03-27 09:30:00+02:00</td>\n",
              "      <td>10165</td>\n",
              "      <td>2024-03-27 09:26:56</td>\n",
              "      <td>2024-03-27 06:37:31</td>\n",
              "      <td>2:49:25</td>\n",
              "      <td>00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3067</th>\n",
              "      <td>📝🧍🏽BCL: Coach X CTL X CC - Stand-up🧍🏽 📝</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>0vu2k3rvvl0kfupqvb4tvr1b06_20240403T070000Z</td>\n",
              "      <td>2024-04-03 09:00:00</td>\n",
              "      <td>2024-04-03 09:30:00+02:00</td>\n",
              "      <td>735</td>\n",
              "      <td>2024-04-03 09:13:31</td>\n",
              "      <td>2024-04-03 09:01:16</td>\n",
              "      <td>0:12:15</td>\n",
              "      <td>00:01:16</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-16b5f656-3e4d-4dc2-85b0-f51fe09a5671')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-16b5f656-3e4d-4dc2-85b0-f51fe09a5671 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-16b5f656-3e4d-4dc2-85b0-f51fe09a5671');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-be419d6e-746d-4487-94e1-900c2e2891cb\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-be419d6e-746d-4487-94e1-900c2e2891cb')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-be419d6e-746d-4487-94e1-900c2e2891cb button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "final_report_filtered",
              "repr_error": "0"
            }
          },
          "metadata": {},
          "execution_count": 19
        }
      ],
      "source": [
        "# Filter final_report for 'benjamin@codespace.co.za' in the 'Actor' column\n",
        "final_report_filtered = final_report[final_report['Actor'] == 'benjamin@codespace.co.za']\n",
        "final_report_filtered"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "_Hgha-f8AfkS",
        "outputId": "58f7fe27-8a9f-4de2-883d-46f0702b60a7"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                               Calendar event ID      Start DateTime  \\\n",
              "0    00inq6hcrr0n16cnf6kmobhp93_20240117T070000Z 2024-01-17 09:00:00   \n",
              "1                     018guf86i30aspgic05vdg3t60 2024-02-22 17:15:00   \n",
              "2                     02hkjm5isptm54co5akrd9kudc 2024-02-27 15:00:00   \n",
              "3                     03d0fm70ld6e53p6ib9gsfl4ck 2024-02-29 18:36:00   \n",
              "4    043oqvca9pikr77sgshqjrdqph_20240312T081500Z 2024-03-12 10:15:00   \n",
              "..                                           ...                 ...   \n",
              "480                   uq77jo6ed2tf1f5icampsiaoac 2024-02-29 17:00:00   \n",
              "481                   v5ajivdg26lemc6skn9acsjvog 2024-02-22 14:30:00   \n",
              "482                   vcfpaf8oidh2llh9kappd588v8 2024-01-31 18:15:00   \n",
              "483                   vgcnou051gcpfv2gujq5hiak50 2024-01-24 17:00:00   \n",
              "484                   vvebsujt2lnmln2hithvibpjsk 2024-03-05 15:30:00   \n",
              "\n",
              "                 End DateTime Student Time Entered                    Actor  \\\n",
              "0   2024-01-17 10:00:00+02:00  2024-01-17 08:56:49     owen@codespace.co.za   \n",
              "1   2024-02-22 17:30:00+02:00  2024-02-22 17:14:33   elzabe@codespace.co.za   \n",
              "2   2024-02-27 15:15:00+02:00  2024-02-27 15:00:50      che@codespace.co.za   \n",
              "3   2024-02-29 18:51:00+02:00  2024-02-29 18:36:17   elzabe@codespace.co.za   \n",
              "4   2024-03-12 11:15:00+02:00  2024-03-12 10:13:34  zachary@codespace.co.za   \n",
              "..                        ...                  ...                      ...   \n",
              "480 2024-02-29 17:15:00+02:00  2024-02-29 16:58:43   elzabe@codespace.co.za   \n",
              "481 2024-02-22 14:45:00+02:00  2024-02-22 14:30:08      che@codespace.co.za   \n",
              "482 2024-01-31 18:30:00+02:00  2024-01-31 18:15:46     riko@codespace.co.za   \n",
              "483 2024-01-24 17:15:00+02:00  2024-01-24 16:59:24     chad@codespace.co.za   \n",
              "484 2024-03-05 15:45:00+02:00  2024-03-05 15:32:18      che@codespace.co.za   \n",
              "\n",
              "     Coach Time Entered  Average Time Student Waits for Coach  \n",
              "0   2024-01-17 09:00:55                                  55.0  \n",
              "1   2024-02-22 17:16:31                                  91.0  \n",
              "2   2024-02-27 14:59:43                                   0.0  \n",
              "3   2024-02-29 18:36:04                                   0.0  \n",
              "4   2024-03-12 10:16:15                                  75.0  \n",
              "..                  ...                                   ...  \n",
              "480 2024-02-29 17:00:15                                  15.0  \n",
              "481 2024-02-22 14:31:13                                   0.0  \n",
              "482 2024-01-31 18:15:11                                   0.0  \n",
              "483 2024-01-24 16:59:01                                   0.0  \n",
              "484 2024-03-05 15:32:08                                   0.0  \n",
              "\n",
              "[485 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ae199439-f580-4096-aba9-03514fee0f0f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Calendar event ID</th>\n",
              "      <th>Start DateTime</th>\n",
              "      <th>End DateTime</th>\n",
              "      <th>Student Time Entered</th>\n",
              "      <th>Actor</th>\n",
              "      <th>Coach Time Entered</th>\n",
              "      <th>Average Time Student Waits for Coach</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>00inq6hcrr0n16cnf6kmobhp93_20240117T070000Z</td>\n",
              "      <td>2024-01-17 09:00:00</td>\n",
              "      <td>2024-01-17 10:00:00+02:00</td>\n",
              "      <td>2024-01-17 08:56:49</td>\n",
              "      <td>owen@codespace.co.za</td>\n",
              "      <td>2024-01-17 09:00:55</td>\n",
              "      <td>55.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>018guf86i30aspgic05vdg3t60</td>\n",
              "      <td>2024-02-22 17:15:00</td>\n",
              "      <td>2024-02-22 17:30:00+02:00</td>\n",
              "      <td>2024-02-22 17:14:33</td>\n",
              "      <td>elzabe@codespace.co.za</td>\n",
              "      <td>2024-02-22 17:16:31</td>\n",
              "      <td>91.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>02hkjm5isptm54co5akrd9kudc</td>\n",
              "      <td>2024-02-27 15:00:00</td>\n",
              "      <td>2024-02-27 15:15:00+02:00</td>\n",
              "      <td>2024-02-27 15:00:50</td>\n",
              "      <td>che@codespace.co.za</td>\n",
              "      <td>2024-02-27 14:59:43</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>03d0fm70ld6e53p6ib9gsfl4ck</td>\n",
              "      <td>2024-02-29 18:36:00</td>\n",
              "      <td>2024-02-29 18:51:00+02:00</td>\n",
              "      <td>2024-02-29 18:36:17</td>\n",
              "      <td>elzabe@codespace.co.za</td>\n",
              "      <td>2024-02-29 18:36:04</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>043oqvca9pikr77sgshqjrdqph_20240312T081500Z</td>\n",
              "      <td>2024-03-12 10:15:00</td>\n",
              "      <td>2024-03-12 11:15:00+02:00</td>\n",
              "      <td>2024-03-12 10:13:34</td>\n",
              "      <td>zachary@codespace.co.za</td>\n",
              "      <td>2024-03-12 10:16:15</td>\n",
              "      <td>75.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>480</th>\n",
              "      <td>uq77jo6ed2tf1f5icampsiaoac</td>\n",
              "      <td>2024-02-29 17:00:00</td>\n",
              "      <td>2024-02-29 17:15:00+02:00</td>\n",
              "      <td>2024-02-29 16:58:43</td>\n",
              "      <td>elzabe@codespace.co.za</td>\n",
              "      <td>2024-02-29 17:00:15</td>\n",
              "      <td>15.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>481</th>\n",
              "      <td>v5ajivdg26lemc6skn9acsjvog</td>\n",
              "      <td>2024-02-22 14:30:00</td>\n",
              "      <td>2024-02-22 14:45:00+02:00</td>\n",
              "      <td>2024-02-22 14:30:08</td>\n",
              "      <td>che@codespace.co.za</td>\n",
              "      <td>2024-02-22 14:31:13</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>482</th>\n",
              "      <td>vcfpaf8oidh2llh9kappd588v8</td>\n",
              "      <td>2024-01-31 18:15:00</td>\n",
              "      <td>2024-01-31 18:30:00+02:00</td>\n",
              "      <td>2024-01-31 18:15:46</td>\n",
              "      <td>riko@codespace.co.za</td>\n",
              "      <td>2024-01-31 18:15:11</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>483</th>\n",
              "      <td>vgcnou051gcpfv2gujq5hiak50</td>\n",
              "      <td>2024-01-24 17:00:00</td>\n",
              "      <td>2024-01-24 17:15:00+02:00</td>\n",
              "      <td>2024-01-24 16:59:24</td>\n",
              "      <td>chad@codespace.co.za</td>\n",
              "      <td>2024-01-24 16:59:01</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>484</th>\n",
              "      <td>vvebsujt2lnmln2hithvibpjsk</td>\n",
              "      <td>2024-03-05 15:30:00</td>\n",
              "      <td>2024-03-05 15:45:00+02:00</td>\n",
              "      <td>2024-03-05 15:32:18</td>\n",
              "      <td>che@codespace.co.za</td>\n",
              "      <td>2024-03-05 15:32:08</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>485 rows × 7 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae199439-f580-4096-aba9-03514fee0f0f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ae199439-f580-4096-aba9-03514fee0f0f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ae199439-f580-4096-aba9-03514fee0f0f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-67cc58f9-be84-4c51-934a-44c673a64a4c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-67cc58f9-be84-4c51-934a-44c673a64a4c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-67cc58f9-be84-4c51-934a-44c673a64a4c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "waiting_times",
              "summary": "{\n  \"name\": \"waiting_times\",\n  \"rows\": 485,\n  \"fields\": [\n    {\n      \"column\": \"Calendar event ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 402,\n        \"samples\": [\n          \"cklq60oms5tuo69t8n80t5ve56_20240119T073000Z\",\n          \"bubmk2pd8mrutp4hkrpfpqcvqc\",\n          \"14tfv9fb6u6qv2cjb2nuvf8tdd\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Start DateTime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-05 09:30:00\",\n        \"max\": \"2024-04-04 10:15:00\",\n        \"num_unique_values\": 268,\n        \"samples\": [\n          \"2024-02-06 14:45:00\",\n          \"2024-04-01 17:15:00\",\n          \"2024-02-14 09:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"End DateTime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-05 10:30:00+02:00\",\n        \"max\": \"2024-04-04 11:15:00+02:00\",\n        \"num_unique_values\": 273,\n        \"samples\": [\n          \"2024-03-19 15:30:00+02:00\",\n          \"2024-03-26 15:50:00+02:00\",\n          \"2024-02-13 19:00:00+02:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Student Time Entered\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-05 09:28:12\",\n        \"max\": \"2024-04-04 10:13:40\",\n        \"num_unique_values\": 402,\n        \"samples\": [\n          \"2024-01-19 09:27:19\",\n          \"2024-01-24 18:29:57\",\n          \"2024-01-31 10:59:03\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"kenneth@codespace.co.za\",\n          \"nwabisa@codespace.co.za\",\n          \"owen@codespace.co.za\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Coach Time Entered\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-05 09:27:30\",\n        \"max\": \"2024-04-04 10:15:01\",\n        \"num_unique_values\": 485,\n        \"samples\": [\n          \"2024-02-06 11:00:12\",\n          \"2024-01-24 17:59:28\",\n          \"2024-01-18 09:59:58\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average Time Student Waits for Coach\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 121.25638037247498,\n        \"min\": 0.0,\n        \"max\": 1425.0,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          178.0,\n          63.0,\n          80.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 20
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "words = ['Coaching', '1-1 / 1-1\\'s', 'group', 'PTO2306', 'PTO2309', 'One-on-One', '1-on-1']\n",
        "\n",
        "# Assuming final_report is your DataFrame\n",
        "final_report['Start DateTime'] = pd.to_datetime(final_report['Start DateTime'])\n",
        "final_report['End DateTime'] = pd.to_datetime(final_report['End DateTime'])\n",
        "final_report['Time Entered'] = pd.to_datetime(final_report['Time Entered'])\n",
        "\n",
        "names = ['che@codespace.co.za', 'chad@codespace.co.za', 'nwabisa@codespace.co.za', 'kenneth@codespace.co.za', 'sasha@codespace.co.za', 'naeem@codespace.co.za', 'joshua@codespace.co.za', 'janizol@codespace.co.za', 'owen@codespace.co.za', 'chemonique@codespace.co.za', 'zachary@codespace.co.za', 'kevin@codespace.co.za', 'elzabe@codespace.co.za', 'riko@codespace.co.za', 'benjamin@codespace.co.za']\n",
        "\n",
        "# Filter final_report for events in the words list\n",
        "final_report = final_report[final_report['Title'].str.contains('|'.join(words))]\n",
        "\n",
        "# Create a dataframe that contains the earliest 'Time Entered' for each coach for each meeting\n",
        "coach_times = final_report[final_report['Actor'].isin(names)].groupby(['Actor', 'Calendar event ID', 'Start DateTime', 'End DateTime' ])['Time Entered'].min().reset_index()\n",
        "coach_times.rename(columns={'Time Entered': 'Coach Time Entered'}, inplace=True)\n",
        "\n",
        "# Create a dataframe that contains the earliest 'Time Entered' for each student for each meeting\n",
        "student_times = final_report[~final_report['Actor'].isin(names)].groupby(['Calendar event ID', 'Start DateTime', 'End DateTime' ])['Time Entered'].min().reset_index()\n",
        "student_times.rename(columns={'Time Entered': 'Student Time Entered'}, inplace=True)\n",
        "\n",
        "# Merge these two dataframes\n",
        "waiting_times = pd.merge(student_times, coach_times, on=['Calendar event ID', 'Start DateTime', 'End DateTime'], how='inner')\n",
        "\n",
        "# Calculate the waiting time and store it in a new column 'Waiting Time'\n",
        "waiting_times['Average Time Student Waits for Coach'] = (waiting_times['Coach Time Entered'] - waiting_times[['Student Time Entered', 'Start DateTime']].max(axis=1)).dt.total_seconds()\n",
        "\n",
        "# Add conditions for when both parties were late or the student was early\n",
        "waiting_times.loc[(waiting_times['Coach Time Entered'] > waiting_times['Start DateTime']) & (waiting_times['Student Time Entered'] <= waiting_times['Start DateTime']), 'Average Time Student Waits for Coach'] = (waiting_times['Coach Time Entered'] - waiting_times['Start DateTime']).dt.total_seconds()\n",
        "waiting_times.loc[waiting_times['Student Time Entered'] > waiting_times['Start DateTime'], 'Average Time Student Waits for Coach'] = 0\n",
        "\n",
        "# Replace negative values in 'Waiting Time' with 0\n",
        "waiting_times['Average Time Student Waits for Coach'] = waiting_times['Average Time Student Waits for Coach'].clip(lower=0)\n",
        "\n",
        "waiting_times"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vHBYmN_UAfkS",
        "outputId": "2bdbebcb-0e4c-4ebd-ed56-4f2bf9d178b7"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "55.0"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "# Define the data\n",
        "data = {\n",
        "    'Start DateTime': pd.to_datetime('2024-01-17 09:00:00'),\n",
        "    'Student Time Entered': pd.to_datetime('2024-01-17 08:56:49'),\n",
        "    'Coach Time Entered': pd.to_datetime('2024-01-17 09:00:55')\n",
        "}\n",
        "\n",
        "# Calculate the waiting time\n",
        "waiting_time = max(data['Student Time Entered'], data['Start DateTime'])\n",
        "waiting_time = (data['Coach Time Entered'] - waiting_time).total_seconds()\n",
        "\n",
        "# Replace negative values with 0\n",
        "waiting_time = max(waiting_time, 0)\n",
        "\n",
        "waiting_time"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GQMF_Y49AfkS"
      },
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mCYRBuTLAfkS",
        "outputId": "1f296beb-5905-4499-8764-d90fc83a4b32"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "522"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "# Define the names to filter for\n",
        "names = ['che@codespace.co.za', 'chad@codespace.co.za', 'nwabisa@codespace.co.za', 'kenneth@codespace.co.za', 'sasha@codespace.co.za', 'naeem@codespace.co.za', 'joshua@codespace.co.za', 'janizol@codespace.co.za', 'owen@codespace.co.za', 'chemonique@codespace.co.za', 'zachary@codespace.co.za', 'kevin@codespace.co.za', 'elzabe@codespace.co.za', 'riko@codespace.co.za', 'benjamin@codespace.co.za']\n",
        "\n",
        "# Define the words to search for\n",
        "words = ['Coaching', '1-1 / 1-1\\'s', 'group', 'marking', 'lecture', 'PTO2306', 'PTO2309', 'One-on-One', '1-on-1']\n",
        "\n",
        "# Create a regex pattern with the words\n",
        "pattern = '|'.join(words)\n",
        "\n",
        "# Filter the 'Actor' column for the specified names\n",
        "grouped_report = final_report[final_report['Actor'].isin(names)]\n",
        "\n",
        "# Filter the 'Title' column for records that contain any of the words\n",
        "grouped_report = grouped_report[grouped_report['Title'].str.contains(pattern, case=False, na=False)]\n",
        "\n",
        "# Filter for events after 01/01/2024\n",
        "grouped_report = grouped_report[grouped_report['Start DateTime'] > '2024-01-01']\n",
        "\n",
        "# Reorder the columns\n",
        "grouped_report = grouped_report[['Title', 'Actor', 'Calendar event ID', 'Start DateTime', 'End DateTime', 'Time Entered', 'Action time', 'Duration', 'Lateness (min:sec)', 'Duration (seconds)']]\n",
        "\n",
        "# Remove all duplicate rows\n",
        "grouped_report = grouped_report.drop_duplicates()\n",
        "\n",
        "# Display the report\n",
        "#grouped_report.to_csv('consolidated_report_new.csv', index=False)\n",
        "len(grouped_report)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "IaX4twpyAfkS"
      },
      "outputs": [],
      "source": [
        "# Filter final_report for 'benjamin@codespace.co.za' in the 'Actor' column\n",
        "final_report_filtered = grouped_report[grouped_report['Actor'] == 'benjamin@codespace.co.za']\n",
        "final_report_filtered.to_csv('benjamin@codespace.co.za.csv')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 554
        },
        "id": "Il4ffYXdAfkS",
        "outputId": "7b32de8c-1a20-4db1-a12a-18b0c1c9c49e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          Name                       Actor  Total_Lateness_in_seconds  \\\n",
              "0        Sasha       sasha@codespace.co.za                      12397   \n",
              "1         Chad        chad@codespace.co.za                      10757   \n",
              "2      Nwabisa     nwabisa@codespace.co.za                       8267   \n",
              "3          Che         che@codespace.co.za                       7921   \n",
              "4     Benjamin    benjamin@codespace.co.za                       3003   \n",
              "5         Owen        owen@codespace.co.za                       2642   \n",
              "6         Riko        riko@codespace.co.za                       2352   \n",
              "7        Kevin       kevin@codespace.co.za                       1886   \n",
              "8       Joshua      joshua@codespace.co.za                       1621   \n",
              "9      Kenneth     kenneth@codespace.co.za                       1264   \n",
              "10     Zachary     zachary@codespace.co.za                       1083   \n",
              "11      Elzabe      elzabe@codespace.co.za                       1000   \n",
              "12     Janizol     janizol@codespace.co.za                        633   \n",
              "13       Naeem       naeem@codespace.co.za                        314   \n",
              "14  Chemonique  chemonique@codespace.co.za                         61   \n",
              "\n",
              "    Count_of_Lateness  Total_Meetings Total_Lateness_in_hms  \\\n",
              "0                18.0              48              03:26:37   \n",
              "1                36.0              81              02:59:17   \n",
              "2                11.0              28              02:17:47   \n",
              "3                24.0              79              02:12:01   \n",
              "4                14.0              24              00:50:03   \n",
              "5                 5.0              25              00:44:02   \n",
              "6                 6.0              61              00:39:12   \n",
              "7                 5.0              13              00:31:26   \n",
              "8                 1.0              62              00:27:01   \n",
              "9                 2.0              18              00:21:04   \n",
              "10                1.0              28              00:18:03   \n",
              "11                2.0              27              00:16:40   \n",
              "12                2.0              11              00:10:33   \n",
              "13                2.0              10              00:05:14   \n",
              "14                0.0               7              00:01:01   \n",
              "\n",
              "   Average_Lateness_Per_Coach (Min)  Percentage_of_Sessions_with_Lateness  \\\n",
              "0                             11.48                             37.500000   \n",
              "1                              4.98                             44.444444   \n",
              "2                             12.53                             39.285714   \n",
              "3                               5.5                             30.379747   \n",
              "4                              3.58                             58.333333   \n",
              "5                              8.81                             20.000000   \n",
              "6                              6.53                              9.836066   \n",
              "7                              6.29                             38.461538   \n",
              "8                             27.02                              1.612903   \n",
              "9                             10.53                             11.111111   \n",
              "10                            18.05                              3.571429   \n",
              "11                             8.33                              7.407407   \n",
              "12                             5.28                             18.181818   \n",
              "13                             2.62                             20.000000   \n",
              "14                              0.0                              0.000000   \n",
              "\n",
              "   Average Time Student Waits for Coach  \n",
              "0                              00:01:04  \n",
              "1                              00:01:10  \n",
              "2                              00:01:05  \n",
              "3                              00:00:55  \n",
              "4                              00:00:44  \n",
              "5                              00:01:33  \n",
              "6                              00:00:26  \n",
              "7                              00:01:19  \n",
              "8                              00:00:24  \n",
              "9                              00:01:10  \n",
              "10                             00:00:29  \n",
              "11                             00:00:27  \n",
              "12                             00:00:03  \n",
              "13                             00:00:31  \n",
              "14                             00:00:08  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c82de39e-d0e0-4966-8db5-161ebc99d3b1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Name</th>\n",
              "      <th>Actor</th>\n",
              "      <th>Total_Lateness_in_seconds</th>\n",
              "      <th>Count_of_Lateness</th>\n",
              "      <th>Total_Meetings</th>\n",
              "      <th>Total_Lateness_in_hms</th>\n",
              "      <th>Average_Lateness_Per_Coach (Min)</th>\n",
              "      <th>Percentage_of_Sessions_with_Lateness</th>\n",
              "      <th>Average Time Student Waits for Coach</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Sasha</td>\n",
              "      <td>sasha@codespace.co.za</td>\n",
              "      <td>12397</td>\n",
              "      <td>18.0</td>\n",
              "      <td>48</td>\n",
              "      <td>03:26:37</td>\n",
              "      <td>11.48</td>\n",
              "      <td>37.500000</td>\n",
              "      <td>00:01:04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Chad</td>\n",
              "      <td>chad@codespace.co.za</td>\n",
              "      <td>10757</td>\n",
              "      <td>36.0</td>\n",
              "      <td>81</td>\n",
              "      <td>02:59:17</td>\n",
              "      <td>4.98</td>\n",
              "      <td>44.444444</td>\n",
              "      <td>00:01:10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Nwabisa</td>\n",
              "      <td>nwabisa@codespace.co.za</td>\n",
              "      <td>8267</td>\n",
              "      <td>11.0</td>\n",
              "      <td>28</td>\n",
              "      <td>02:17:47</td>\n",
              "      <td>12.53</td>\n",
              "      <td>39.285714</td>\n",
              "      <td>00:01:05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Che</td>\n",
              "      <td>che@codespace.co.za</td>\n",
              "      <td>7921</td>\n",
              "      <td>24.0</td>\n",
              "      <td>79</td>\n",
              "      <td>02:12:01</td>\n",
              "      <td>5.5</td>\n",
              "      <td>30.379747</td>\n",
              "      <td>00:00:55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Benjamin</td>\n",
              "      <td>benjamin@codespace.co.za</td>\n",
              "      <td>3003</td>\n",
              "      <td>14.0</td>\n",
              "      <td>24</td>\n",
              "      <td>00:50:03</td>\n",
              "      <td>3.58</td>\n",
              "      <td>58.333333</td>\n",
              "      <td>00:00:44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Owen</td>\n",
              "      <td>owen@codespace.co.za</td>\n",
              "      <td>2642</td>\n",
              "      <td>5.0</td>\n",
              "      <td>25</td>\n",
              "      <td>00:44:02</td>\n",
              "      <td>8.81</td>\n",
              "      <td>20.000000</td>\n",
              "      <td>00:01:33</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Riko</td>\n",
              "      <td>riko@codespace.co.za</td>\n",
              "      <td>2352</td>\n",
              "      <td>6.0</td>\n",
              "      <td>61</td>\n",
              "      <td>00:39:12</td>\n",
              "      <td>6.53</td>\n",
              "      <td>9.836066</td>\n",
              "      <td>00:00:26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Kevin</td>\n",
              "      <td>kevin@codespace.co.za</td>\n",
              "      <td>1886</td>\n",
              "      <td>5.0</td>\n",
              "      <td>13</td>\n",
              "      <td>00:31:26</td>\n",
              "      <td>6.29</td>\n",
              "      <td>38.461538</td>\n",
              "      <td>00:01:19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Joshua</td>\n",
              "      <td>joshua@codespace.co.za</td>\n",
              "      <td>1621</td>\n",
              "      <td>1.0</td>\n",
              "      <td>62</td>\n",
              "      <td>00:27:01</td>\n",
              "      <td>27.02</td>\n",
              "      <td>1.612903</td>\n",
              "      <td>00:00:24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Kenneth</td>\n",
              "      <td>kenneth@codespace.co.za</td>\n",
              "      <td>1264</td>\n",
              "      <td>2.0</td>\n",
              "      <td>18</td>\n",
              "      <td>00:21:04</td>\n",
              "      <td>10.53</td>\n",
              "      <td>11.111111</td>\n",
              "      <td>00:01:10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Zachary</td>\n",
              "      <td>zachary@codespace.co.za</td>\n",
              "      <td>1083</td>\n",
              "      <td>1.0</td>\n",
              "      <td>28</td>\n",
              "      <td>00:18:03</td>\n",
              "      <td>18.05</td>\n",
              "      <td>3.571429</td>\n",
              "      <td>00:00:29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Elzabe</td>\n",
              "      <td>elzabe@codespace.co.za</td>\n",
              "      <td>1000</td>\n",
              "      <td>2.0</td>\n",
              "      <td>27</td>\n",
              "      <td>00:16:40</td>\n",
              "      <td>8.33</td>\n",
              "      <td>7.407407</td>\n",
              "      <td>00:00:27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Janizol</td>\n",
              "      <td>janizol@codespace.co.za</td>\n",
              "      <td>633</td>\n",
              "      <td>2.0</td>\n",
              "      <td>11</td>\n",
              "      <td>00:10:33</td>\n",
              "      <td>5.28</td>\n",
              "      <td>18.181818</td>\n",
              "      <td>00:00:03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Naeem</td>\n",
              "      <td>naeem@codespace.co.za</td>\n",
              "      <td>314</td>\n",
              "      <td>2.0</td>\n",
              "      <td>10</td>\n",
              "      <td>00:05:14</td>\n",
              "      <td>2.62</td>\n",
              "      <td>20.000000</td>\n",
              "      <td>00:00:31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Chemonique</td>\n",
              "      <td>chemonique@codespace.co.za</td>\n",
              "      <td>61</td>\n",
              "      <td>0.0</td>\n",
              "      <td>7</td>\n",
              "      <td>00:01:01</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>00:00:08</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c82de39e-d0e0-4966-8db5-161ebc99d3b1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c82de39e-d0e0-4966-8db5-161ebc99d3b1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c82de39e-d0e0-4966-8db5-161ebc99d3b1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ca93f261-a745-4787-8249-bb806684dadb\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ca93f261-a745-4787-8249-bb806684dadb')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ca93f261-a745-4787-8249-bb806684dadb button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_ranked",
              "summary": "{\n  \"name\": \"df_ranked\",\n  \"rows\": 15,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"Kenneth\",\n          \"Elzabe\",\n          \"Sasha\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"kenneth@codespace.co.za\",\n          \"elzabe@codespace.co.za\",\n          \"sasha@codespace.co.za\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Lateness_in_seconds\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4047,\n        \"min\": 61,\n        \"max\": 12397,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          1264,\n          1000,\n          12397\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Count_of_Lateness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.377172750114275,\n        \"min\": 0.0,\n        \"max\": 36.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          2.0,\n          36.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Meetings\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 7,\n        \"max\": 81,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          18,\n          11,\n          48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Lateness_in_hms\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"00:21:04\",\n          \"00:16:40\",\n          \"03:26:37\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average_Lateness_Per_Coach (Min)\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"10.53\",\n          \"8.33\",\n          \"11.48\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Percentage_of_Sessions_with_Lateness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.805646954794994,\n        \"min\": 0.0,\n        \"max\": 58.333333333333336,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          11.11111111111111,\n          7.4074074074074066,\n          37.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average Time Student Waits for Coach\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"00:00:29\",\n          \"00:00:03\",\n          \"00:01:04\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 24
        }
      ],
      "source": [
        "import datetime\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "# Function to convert time string to seconds\n",
        "def convert_hms_to_seconds(time_str):\n",
        "    h, m, s = map(int, time_str.split(':'))\n",
        "    return h * 3600 + m * 60 + s\n",
        "\n",
        "# Function to convert seconds to time string\n",
        "def seconds_to_hms(seconds):\n",
        "    m, s = divmod(seconds, 60)\n",
        "    h, m = divmod(m, 60)\n",
        "    return f\"{int(h):02d}:{int(m):02d}:{int(s):02d}\"\n",
        "\n",
        "# Convert 'Lateness (min:sec)' to seconds\n",
        "grouped_report['Lateness_in_seconds'] = grouped_report['Lateness (min:sec)'].apply(convert_hms_to_seconds)\n",
        "\n",
        "# Create a DataFrame with all coaches\n",
        "df_all_coaches = pd.DataFrame(names, columns=['Actor'])\n",
        "\n",
        "# Group by 'Actor' and sum the lateness in seconds\n",
        "df_ranked = grouped_report.groupby('Actor')['Lateness_in_seconds'].sum().reset_index()\n",
        "\n",
        "# Merge df_all_coaches with df_ranked\n",
        "df_ranked = pd.merge(df_all_coaches, df_ranked, on='Actor', how='left')\n",
        "\n",
        "# Fill NA values for coaches who had no meetings\n",
        "df_ranked.fillna({'Lateness_in_seconds': 0}, inplace=True)\n",
        "\n",
        "# Rename the column\n",
        "df_ranked.rename(columns={'Lateness_in_seconds': 'Total_Lateness_in_seconds'}, inplace=True)\n",
        "\n",
        "# Count the number of late meetings for each actor\n",
        "late_meetings = grouped_report[grouped_report['Lateness_in_seconds'] > 120].groupby('Actor').size()\n",
        "\n",
        "# Map the late meetings to the 'df_ranked' DataFrame based on the 'Actor'\n",
        "df_ranked['Count_of_Lateness'] = df_ranked['Actor'].map(late_meetings).fillna(0)\n",
        "\n",
        "# Sort in descending order by the total lateness\n",
        "df_ranked.sort_values(by='Total_Lateness_in_seconds', ascending=False, inplace=True)\n",
        "\n",
        "# Count the total number of meetings for each actor in the original DataFrame\n",
        "total_meetings = grouped_report.groupby('Actor').size()\n",
        "\n",
        "# Map the total meetings to the 'df_ranked' DataFrame based on the 'Actor'\n",
        "df_ranked['Total_Meetings'] = df_ranked['Actor'].map(total_meetings)\n",
        "\n",
        "# Calculate the percentage of sessions that each actor was late for\n",
        "df_ranked['Percentage_Late'] = (df_ranked['Count_of_Lateness'] / df_ranked['Total_Meetings']) * 100\n",
        "\n",
        "# Convert total lateness in seconds to 'hours:min:sec' format\n",
        "df_ranked['Total_Lateness_in_hms'] = pd.to_timedelta(df_ranked['Total_Lateness_in_seconds'], unit='s')\n",
        "\n",
        "# Calculate average lateness per coach in minutes\n",
        "df_ranked['Average_Lateness_Per_Coach (Min)'] = np.where(df_ranked['Count_of_Lateness'] != 0, (df_ranked['Total_Lateness_in_seconds'] / df_ranked['Count_of_Lateness'] / 60).round(2), 0).astype(str)\n",
        "\n",
        "# Calculate the percentage of sessions with lateness\n",
        "df_ranked['Percentage_of_Sessions_with_Lateness'] = (df_ranked['Count_of_Lateness'] / df_ranked['Total_Meetings']) * 100\n",
        "\n",
        "# Split the 'Actor' column to get the name\n",
        "df_ranked['Name'] = df_ranked['Actor'].str.split('@').str[0]\n",
        "\n",
        "# Capitalize the first letter of the 'Name' column\n",
        "df_ranked['Name'] = df_ranked['Name'].str.capitalize()\n",
        "\n",
        "# Calculate the average waiting time for each coach\n",
        "average_waiting_times = waiting_times.groupby('Actor')['Average Time Student Waits for Coach'].mean().reset_index()\n",
        "\n",
        "# Merge df_ranked and average_waiting_times on the 'Actor' column\n",
        "df_ranked = pd.merge(df_ranked, average_waiting_times, on='Actor', how='outer')\n",
        "\n",
        "# Reorder the columns\n",
        "df_ranked = df_ranked.reindex(columns=['Name', 'Actor', 'Total_Lateness_in_seconds', 'Count_of_Lateness', 'Total_Meetings', 'Total_Lateness_in_hms', 'Average_Lateness_Per_Coach (Min)', 'Percentage_of_Sessions_with_Lateness', 'Average Time Student Waits for Coach'])\n",
        "\n",
        "# Convert total lateness in seconds to 'hours:min:sec' format\n",
        "df_ranked['Total_Lateness_in_hms'] = df_ranked['Total_Lateness_in_seconds'].apply(lambda x: str(pd.to_timedelta(x, unit='s')).split(' ')[2])\n",
        "\n",
        "# Convert 'Average Time Student Waits for Coach' to 'hours:min:sec' format\n",
        "df_ranked['Average Time Student Waits for Coach'] = df_ranked['Average Time Student Waits for Coach'].apply(seconds_to_hms)\n",
        "\n",
        "# Save to CSV\n",
        "df_ranked.to_csv('lateness.csv', index=False)\n",
        "\n",
        "# Display the DataFrame\n",
        "df_ranked"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 269
        },
        "id": "VscRca-aAfkS",
        "outputId": "4432abc6-69ac-460f-a2b5-fa66af6d7ae8"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Day_of_week  Is_Late\n",
              "0      Monday      117\n",
              "1     Tuesday      102\n",
              "2   Wednesday      122\n",
              "3    Thursday       86\n",
              "4      Friday       90\n",
              "5    Saturday        0\n",
              "6      Sunday        0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2b7918e5-1954-4c6f-8099-83f8e39455bf\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Day_of_week</th>\n",
              "      <th>Is_Late</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Monday</td>\n",
              "      <td>117</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Tuesday</td>\n",
              "      <td>102</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Wednesday</td>\n",
              "      <td>122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Thursday</td>\n",
              "      <td>86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Friday</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Saturday</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Sunday</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2b7918e5-1954-4c6f-8099-83f8e39455bf')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2b7918e5-1954-4c6f-8099-83f8e39455bf button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2b7918e5-1954-4c6f-8099-83f8e39455bf');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-abce1f05-81b9-40ee-aadd-0ff8decd80d7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-abce1f05-81b9-40ee-aadd-0ff8decd80d7')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-abce1f05-81b9-40ee-aadd-0ff8decd80d7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "lateness_count_by_day",
              "summary": "{\n  \"name\": \"lateness_count_by_day\",\n  \"rows\": 7,\n  \"fields\": [\n    {\n      \"column\": \"Day_of_week\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Monday\",\n          \"Tuesday\",\n          \"Saturday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Is_Late\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 52,\n        \"min\": 0,\n        \"max\": 122,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          117,\n          102,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 25
        }
      ],
      "source": [
        "# Convert 'Start DateTime' to datetime if it's not already in that format\n",
        "grouped_report['Start DateTime'] = pd.to_datetime(grouped_report['Start DateTime'])\n",
        "\n",
        "# Create a new column 'Day_of_week' that contains the day of the week\n",
        "grouped_report['Day_of_week'] = grouped_report['Start DateTime'].dt.day_name()\n",
        "\n",
        "# Create a new column 'Is_Late' that is 1 if the participant was late and 0 otherwise\n",
        "grouped_report['Is_Late'] = (grouped_report['Duration (seconds)'] > 120).astype(int)\n",
        "\n",
        "# Define the order of the days of the week\n",
        "days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n",
        "\n",
        "# Convert 'Day_of_week' to categorical type with the defined order\n",
        "grouped_report['Day_of_week'] = pd.Categorical(grouped_report['Day_of_week'], categories=days, ordered=True)\n",
        "\n",
        "# Group by the day of the week and count the number of late instances\n",
        "lateness_count_by_day = grouped_report.groupby('Day_of_week')['Is_Late'].sum()\n",
        "\n",
        "# Reset the index to convert the Series to a DataFrame\n",
        "lateness_count_by_day = lateness_count_by_day.reset_index()\n",
        "\n",
        "lateness_count_by_day"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 87
        },
        "id": "jQp12N2cAfkS",
        "outputId": "26fbb2c6-eaac-4816-eb6c-e6480239cc3c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "\"import gspread_dataframe as gd\\n\\n# Your existing gspread client\\nclient = gspread.authorize(creds)\\n\\n# Open the Google Spreadsheet using its unique key\\nspreadsheet = client.open_by_key('1WlIK0LvyqeW_EZ68ya5SnTBqMvZBWlKCwl9PEmbcIt8')\\n\\n# Select the worksheets\\nworksheet1 = spreadsheet.worksheet('Attendance Report 1')\\nworksheet2 = spreadsheet.worksheet('Attendance Report 2')\\nworksheet3 = spreadsheet.worksheet('lateness_by_day')\\n\\n# Upload your pandas DataFrames to the Google Sheet\\n#gd.set_with_dataframe(worksheet1, report_copy, include_index=False, include_column_header=True, resize=True)\\ngd.set_with_dataframe(worksheet2, df_ranked, include_index=False, include_column_header=True, resize=True)\\ngd.set_with_dataframe(worksheet3, lateness_count_by_day, include_index=False, include_column_header=True, resize=True)\""
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 26
        }
      ],
      "source": [
        "'''import gspread_dataframe as gd\n",
        "\n",
        "# Your existing gspread client\n",
        "client = gspread.authorize(creds)\n",
        "\n",
        "# Open the Google Spreadsheet using its unique key\n",
        "spreadsheet = client.open_by_key('1WlIK0LvyqeW_EZ68ya5SnTBqMvZBWlKCwl9PEmbcIt8')\n",
        "\n",
        "# Select the worksheets\n",
        "worksheet1 = spreadsheet.worksheet('Attendance Report 1')\n",
        "worksheet2 = spreadsheet.worksheet('Attendance Report 2')\n",
        "worksheet3 = spreadsheet.worksheet('lateness_by_day')\n",
        "\n",
        "# Upload your pandas DataFrames to the Google Sheet\n",
        "#gd.set_with_dataframe(worksheet1, report_copy, include_index=False, include_column_header=True, resize=True)\n",
        "gd.set_with_dataframe(worksheet2, df_ranked, include_index=False, include_column_header=True, resize=True)\n",
        "gd.set_with_dataframe(worksheet3, lateness_count_by_day, include_index=False, include_column_header=True, resize=True)'''"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "base",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.11.0"
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}